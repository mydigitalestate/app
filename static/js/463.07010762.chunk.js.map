{"version":3,"file":"static/js/463.07010762.chunk.js","mappings":"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","sources":["components/SmallHousesWidget.js","icons/autographIcon.js","icons/profit.js","pages/dashboard/AlmostCompleted/index.js","pages/dashboard/NewOnMarket/index.js","pages/dashboard/data/reportsBarChartData.js","examples/Charts/BarCharts/ReportsBarChart/configs/index.js","examples/Charts/BarCharts/ReportsBarChart/index.js","icons/iconNetworkGroup.js","components/Table/index.js","pages/dashboard/Leaderboard/Leaderboard.js","pages/dashboard/index.js","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { Box, Typography } from \"@mui/material\"\nimport { Link } from \"react-router-dom\"\nimport locationIcon from \"../icons/locationIcon\"\nimport timeIcon from \"../icons/timeIcon\"\nimport trackEvent from \"./context\"\n\nexport default function SmallHouseItem({ link, duration, address, name, pic, caption = \"per month\", value, loading, priority }) {\n  const handleItemClick = () => {\n    trackEvent(\"TopInvestments\")\n  }\n\n  return (\n    <Link to={link} rel=\"noreferrer\" sx={{ textDecoration: \"none\" }} data-test-id=\"items\" onClick={handleItemClick}>\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 0,\n          marginBottom: 0\n        }}>\n        <img\n          src={pic}\n          alt=\"house\"\n          width=\"100\"\n          height=\"100\"\n          style={{\n            borderRadius: \"10%\",\n            objectFit: \"cover\",\n            width: \"100px\",\n            aspectRatio: \"auto 100 / 80\",\n            height: \"80px\",\n            overflowClipMargin: \"content-box\",\n            overflow: \"clip\"\n          }}\n          fetchpriority={priority}\n          loading={loading}\n        />\n        <Box sx={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\", gap: 1, alignItems: \"center\" }}>\n          <Box sx={{ pl: 2 }}>\n            <Typography\n              variant=\"body1\"\n              sx={{\n                fontFamily: \"'Roboto', Helvetica, Arial, sans-serif\",\n                letterSpacing: \"0.02857em\",\n                fontSize: \"1.08rem\",\n                paddingBottom: 0,\n                lineHeight: 1,\n                opacity: 1,\n                textDecoration: \"none\",\n                color: \"rgb(52, 71, 103)\",\n                fontWeight: 600\n              }}>\n              {name}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"start\",\n                gap: \"2px\",\n                padding: \"3.52px 0px 0px\",\n                fontFamily: \"'Roboto', Helvetica, Arial, sans-serif\",\n                lineHeight: 1.625,\n                paddingBottom: 0,\n                letterSpacing: \"0.00938em\",\n                fontSize: \"0.55rem\",\n                opacity: 1,\n                color: \"rgb(123, 128, 154)\",\n                fontWeight: 400\n              }}>\n              {locationIcon} {address}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"start\",\n                gap: \"2px\",\n                margin: \"3.52px 0px 0px\",\n                fontFamily: \"'Roboto', Helvetica, Arial, sans-serif\",\n                lineHeight: 1.625,\n                letterSpacing: \"0.00938em\",\n                fontSize: \"0.55rem\",\n                marginTop: 0,\n                paddingTop: 0,\n                opacity: 1,\n                color: \"rgb(123, 128, 154)\",\n                fontWeight: 400\n              }}>\n              {timeIcon} {duration} months\n            </Typography>\n          </Box>\n          <Box>\n            <Typography\n              variant=\"body2\"\n              sx={{\n                fontFamily: \"'Roboto', Helvetica, Arial, sans-serif\",\n                letterSpacing: \"0.00938em\",\n                lineHeight: 1,\n                fontSize: \"0.9rem\",\n                opacity: 1,\n                marginBottom: 0,\n                paddingBottom: 0,\n                color: \"rgb(26, 115, 232)\",\n                fontWeight: 600\n              }}>\n              {value.toLocaleString(\"en-US\")} USDT\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              component=\"span\"\n              style={{\n                fontFamily: \"'Roboto', Helvetica, Arial, sans-serif\",\n                letterSpacing: \"0.00938em\",\n                lineHeight: 1,\n                fontSize: \"0.55rem\",\n                opacity: 1,\n                color: \"rgb(123, 128, 154)\",\n                marginTop: 0,\n                paddingTop: 0,\n                float: \"right\",\n                fontWeight: 400\n              }}>\n              {caption}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n    </Link>\n  )\n}\n","const autographIcon = (\n  <svg\n    style={{ paddingBottom: \"8px\", fill: \"currentColor\" }}\n    className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-s5ued0-MuiSvgIcon-root\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    data-testid=\"AutoGraphIcon\">\n    <path d=\"M14.06 9.94 12 9l2.06-.94L15 6l.94 2.06L18 9l-2.06.94L15 12l-.94-2.06zM4 14l.94-2.06L7 11l-2.06-.94L4 8l-.94 2.06L1 11l2.06.94L4 14zm4.5-5 1.09-2.41L12 5.5 9.59 4.41 8.5 2 7.41 4.41 5 5.5l2.41 1.09L8.5 9zm-4 11.5 6-6.01 4 4L23 8.93l-1.41-1.41-7.09 7.97-4-4L3 19l1.5 1.5z\"></path>\n  </svg>\n)\n\nexport default autographIcon\n","const profitIcon = (\n  <svg viewBox=\"0 0 672 777\" style={{ paddingBottom: \"4px\" }}>\n    <path\n      fill=\"#fff\"\n      d=\"M96.337 515.359c6.045-36.57 19.978-69.802 37.918-101.378 33.315-58.637 75.669-109.943 127.324-153.35 11.05-9.286 23.16-17.393 35.255-25.319 5.427-3.556 12.024-5.327 18.09-7.908l.95 1.203-24.702 44.135.856.78c1.35-1.413 2.867-2.7 4.023-4.256 9.93-13.371 19.715-26.85 29.771-40.123 1.306-1.724 3.792-3.254 5.915-3.548 19.031-2.636 19.726-2.17 27.83 15.21 5.904 12.66 11.81 25.319 17.743 37.964.185.394.687.639 2.376.626l-11.415-52.873c6.812 2.63 12.823 4.343 18.264 7.157 23.471 12.14 43.399 29.09 62.16 47.392 44.578 43.487 81.84 92.5 109.887 148.234 15.428 30.658 27.18 62.609 30.881 97.03 2.713 25.233.87 49.992-9.656 73.446-15.088 33.616-39.722 54.42-77.173 60.589-40.062 6.598-80.277 10.213-120.759 11.577-54.199 1.825-108.32.403-162.176-6.181-17.465-2.136-34.7-6.189-52.012-9.514-21.877-4.202-37-18.052-49.66-35.26-19.494-26.5-25.815-56.545-23.588-88.815.379-5.478 1.205-10.924 1.898-16.818m302.68-59.912c-12.412-9.061-27.165-12.317-41.494-16.538-3.317-.978-4.395-2.32-4.359-5.81.193-18.493.086-36.988.108-55.482.001-1.239.213-2.477.37-4.18 10.717 3.48 18.151 9.805 22.29 19.794 1.462 3.526 2.425 7.264 3.965 10.75 3.917 8.867 12.678 13.066 22.234 10.88 8.983-2.054 15.526-10.588 14.585-20.004-.455-4.555-1.61-9.277-3.55-13.406-8.418-17.92-21.607-30.597-41.28-35.521-6.093-1.525-12.273-2.704-18.846-4.135 0-6.557.34-13.065-.093-19.522-.453-6.748-4.783-9.983-11.123-9.125-4.607.623-7.525 3.727-7.845 9.48-.357 6.429-.082 12.892-.082 19.006-8.364 1.917-16.137 3.081-23.499 5.498-23.984 7.873-38.929 24.041-41.959 49.496-3.348 28.135 5.389 51.739 35.166 64.813 8.204 3.602 16.704 6.621 25.263 9.276 3.689 1.143 4.942 2.507 4.903 6.401-.205 20.492-.091 40.986-.105 61.48-.001 1.608-.134 3.215-.226 5.294-12.713-3.207-21.39-10.527-26.413-22.01-2.596-5.933-4.535-12.152-6.805-18.23-3.365-9.012-11.113-13.203-21.678-11.764-8.783 1.197-16.102 8.72-16.614 17.413-.185 3.133-.033 6.364.528 9.45 3.558 19.595 14.914 33.788 31.3 44.336 11.992 7.719 25.436 11.286 39.917 13.227 0 1.941-.017 3.736.003 5.53.082 7.661-.086 15.337.345 22.978.369 6.532 3.446 9.276 9.338 9.389 6.066.116 8.72-2.214 9.387-9.148.508-5.291.404-10.645.49-15.972.07-4.286.014-8.575.014-12.12 9.367-2.464 18.327-3.955 26.623-7.165 23.85-9.228 38.971-26.462 43.182-51.929 4.12-24.928-2.955-46.128-24.04-62.43z\"\n    />\n    <path\n      fill=\"#fff\"\n      d=\"M295.934 213c-1.757.996-3.167 1.823-4.946 2.867-8.817-10.368-17.543-20.605-26.243-30.865-13.248-15.624-26.433-31.303-39.73-46.885-9.541-11.18-10.33-19.5-1.91-31.519 9.286-13.258 22.189-21.796 37.324-27.204 2.863-1.023 3.728.37 4.824 2.554 8.199 16.334 16.506 32.613 25.977 48.711-.319-2.204-.368-4.488-.997-6.599-6.609-22.158-13.2-44.322-20.088-66.394-1.216-3.894-.249-6.164 2.665-8.488 10.623-8.472 23.115-12.35 36.175-14.627 36.838-6.422 73.293-5.164 109.014 6.565 5.604 1.84 10.682 5.285 15.996 8.002 2.381 1.218 2.624 2.866 1.577 5.332-8.508 20.042-16.894 40.135-25.91 61.628 5.386-3.153 7.248-7.866 10.231-11.414 3.103-3.69 5.829-7.696 8.722-11.563 2.976-3.977 5.954-7.952 9.1-12.153 10.624 6.271 19.596 13.838 24.904 24.836 6.007 12.446 3.737 23.96-5.212 34.277-17.46 20.129-34.944 40.238-52.415 60.358-3.821 4.402-7.704 8.753-11.402 13.256-1.663 2.025-3.077 2.806-5.874 1.796-6.384-2.306-12.962-4.078-19.736-6.152l14.91-36.795-1.906-.928c-.935 1.23-1.92 2.426-2.798 3.696-6.728 9.717-13.541 19.379-20.079 29.223-1.824 2.746-3.705 3.563-6.947 3.199-13.426-1.508-26.922-2.673-40.288.223-4.983 1.08-9.734 3.231-14.938 5.063z\"\n    />\n    <path\n      fill=\"#fff\"\n      d=\"M353.231 482.468c.065-1.577.13-2.711.196-3.857 19.137 2.343 32.828 16.276 32.614 33.02-.217 17.105-14.478 31.922-32.809 33.486v-62.65z\"\n    />\n    <path fill=\"#fff\" d=\"M306.067 403.816c-.701-14.583 5.463-25.253 27.343-30.646v58.03c-15.776-2.92-26.077-13.156-27.343-27.384z\" />\n  </svg>\n)\n\nexport default profitIcon\n","// Material Dashboard 2 React components\nimport MDBox from \"../../../components/MDBox\"\nimport MDTypography from \"../../../components/MDTypography\"\nimport { Card, Divider, Grid } from \"@mui/material\"\nimport DefaultInvestmentCard from \"../../../examples/Cards/ProjectCards/DefaultInvestmentCard\"\n\nfunction AlmostCompleted({ almost_completed }) {\n  return (\n    almost_completed?.length > 0 && (\n      <>\n        <Grid item xs={12} md={6} lg={4}>\n          <Card>\n            <Title>Almost Completed</Title>\n            <Grid sx={{ pb: 0.5, px: 2 }} container spacing={3}>\n              {almost_completed?.map((house, index) => (\n                <Grid item xs={12} md={6} xl={3} key={house.houseid}>\n                  <DefaultInvestmentCard\n                    id={house.houseid}\n                    image={house.pic}\n                    label={house.location}\n                    title={house.title}\n                    personalProgress={house.invested}\n                    networkProgress={house.reached - house.invested}\n                    missingProgress={house.total - house.reached}\n                    value={house.total - house.reached}\n                    caption=\"missing\"\n                    duration={house.period}\n                    priority={index < 5 ? \"high\" : \"auto\"}\n                    loading={index < 5 ? \"eager\" : \"lazy\"}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Card>\n        </Grid>\n      </>\n    )\n  )\n}\nfunction Title({ children }) {\n  return (\n    <>\n      <MDBox display=\"flex\" justifyContent=\"start\" alignItems=\"center\" pt={2} pl={2}>\n        <MDTypography variant=\"h5\">{children}</MDTypography>\n      </MDBox>\n      <Divider />\n    </>\n  )\n}\nexport default AlmostCompleted\n","import Card from \"@mui/material/Card\"\nimport { Divider, Grid, Typography } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport SmallHouseItem from \"../../../components/SmallHousesWidget\"\nimport React from \"react\"\nimport trackEvent from \"../../../components/context\"\n\nfunction NewOnMarket({ new_houses }) {\n  return (\n    new_houses && (\n      <Grid item xs={12} md={6} lg={4}>\n        <Card>\n          <Box display=\"flex\" justifyContent=\"start\" alignItems=\"center\" p={2}>\n            <Typography variant=\"h6\" sx={{ fontSize: \"18px;\" }}>\n              New On Market\n            </Typography>\n          </Box>\n          <Divider sx={{ mb: 0, mt: 0 }} />\n          <Box p={2}>\n            {new_houses.map((house, index) => (\n              <React.Fragment key={house.house_id}>\n                {house && (\n                  <SmallHouseItem\n                    name={house.name}\n                    pic={house.pic}\n                    address={house.address}\n                    link={\"/investment/\" + house.house_id}\n                    duration={house.duration}\n                    value={house.price}\n                    onClick={() => {\n                      trackEvent(\"NewOnMarket\", { investmentId: house.house_id })\n                    }}\n                    priority={index < 5 ? \"high\" : \"auto\"}\n                    loading={index < 5 ? \"eager\" : \"lazy\"}\n                  />\n                )}\n                {index !== new_houses?.length - 1 && <Divider />}\n              </React.Fragment>\n            ))}\n          </Box>\n        </Card>\n      </Grid>\n    )\n  )\n}\n\nexport default NewOnMarket\n","export default {\n  labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n  datasets: { label: \"Sales\", data: [50, 20, 10, 22, 50, 10, 40] },\n};\n","function configs(labels, datasets) {\n  return {\n    data: {\n      labels,\n      datasets: [\n        {\n          label: datasets.label,\n          tension: 0.4,\n          borderWidth: 0,\n          borderRadius: 4,\n          borderSkipped: false,\n          backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n          data: datasets.data,\n          maxBarThickness: 6\n        }\n      ]\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: false\n        }\n      },\n      interaction: {\n        intersect: false,\n        mode: \"index\"\n      },\n      scales: {\n        y: {\n          grid: {\n            drawBorder: false,\n            display: true,\n            drawOnChartArea: true,\n            drawTicks: false,\n            borderDash: [5, 5],\n            color: \"rgba(255, 255, 255, .2)\"\n          },\n          ticks: {\n            suggestedMin: 0,\n            suggestedMax: 500,\n            beginAtZero: true,\n            padding: 10,\n            font: {\n              size: 15.5,\n              weight: 300,\n              family: \"sans-serif\",\n              style: \"normal\",\n              lineHeight: 2\n            },\n            color: \"#fefefe\"\n          }\n        },\n        x: {\n          grid: {\n            drawBorder: false,\n            display: true,\n            drawOnChartArea: true,\n            drawTicks: false,\n            borderDash: [5, 5],\n            color: \"rgba(255, 255, 255, .2)\"\n          },\n          ticks: {\n            display: true,\n            color: \"#f8f9fa\",\n            padding: 10,\n            font: {\n              size: 14,\n              weight: 300,\n              family: \"sans-serif\",\n              style: \"normal\",\n              lineHeight: 2\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default configs\n","import { useMemo } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Bar } from \"react-chartjs-2\"\nimport Card from \"@mui/material/Card\"\nimport MDBox from \"../../../../components/MDBox\"\nimport MDTypography from \"../../../../components/MDTypography\"\nimport configs from \"../../../../examples/Charts/BarCharts/ReportsBarChart/configs\"\n\nfunction ReportsBarChart({ color, title, description, chart, data, this_day_profits }) {\n  const { options } = configs(chart.labels || [], chart.datasets || {})\n  const { amount } = data\n  const labels = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"]\n  const salesData = {\n    labels,\n    datasets: [\n      {\n        label: \"Amount Profited\",\n        data: amount,\n        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n        borderRadius: 4,\n        borderSkipped: false,\n        borderWidth: 0,\n        maxBarThickness: 6,\n        tension: 0.4\n      }\n    ]\n  }\n  \n  return (\n    <Card sx={{ height: \"100%\" }}>\n      <MDBox padding=\"1rem\">\n        {useMemo(() => {\n          if (options) {\n            return (\n              <MDBox variant=\"gradient\" bgColor={color} borderRadius=\"lg\" coloredShadow={color} py={2} pr={0.5} mt={-5} height=\"12.5rem\">\n                <Bar data={salesData} options={options} />\n              </MDBox>\n            )\n          }\n        }, [color, options])}\n        <MDBox pt={3} pb={1} px={1}>\n          <MDBox display=\"flex\" justifyContent=\"space-between\">\n            <MDTypography variant=\"h6\" textTransform=\"capitalize\">\n              {title}\n            </MDTypography>\n            <MDBox display=\"flex\" justifyContent=\"space-between\" flexDirection=\"column\">\n              <MDTypography color={color} variant=\"h6\" textTransform=\"capitalize\">\n                +{this_day_profits.toLocaleString(\"en-US\")}\n                <MDTypography pl={0.3} fontSize={\"0.6rem\"} variant={\"caption\"} fontWeight=\"medium\" color={color}>\n                  USDT\n                </MDTypography>\n              </MDTypography>\n              <MDTypography variant=\"caption\" textTransform=\"capitalize\" fontSize=\"0.70rem\">\n                This day\n              </MDTypography>\n            </MDBox>\n          </MDBox>\n          <MDTypography component=\"div\" variant=\"button\" color=\"text\" fontWeight=\"light\">\n            {description}\n          </MDTypography>\n        </MDBox>\n      </MDBox>\n    </Card>\n  )\n}\n\n// Setting default values for the props of ReportsBarChart\nReportsBarChart.defaultProps = {\n  color: \"dark\",\n  description: \"\"\n}\n\n// Typechecking props for the ReportsBarChart\nReportsBarChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  date: PropTypes.string.isRequired,\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired\n}\n\nexport default ReportsBarChart\n","const iconNetworkGroup = (\n  <svg\n    style={{ fill: \"currentColor\", marginBottom: \"5px\" }}\n    className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-eimhud-MuiSvgIcon-root\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    data-testid=\"GroupIcon\">\n    <path d=\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"></path>\n  </svg>\n)\n\nexport default iconNetworkGroup\n","import \"./index.css\"\nimport Typography from \"@mui/material/Typography\"\nexport default function Table({ columnHeaders, children }) {\n  const templateColumns = Array(columnHeaders.length - 1)\n    .fill(\"auto\")\n    .join(\" \")\n  return (\n    <gridlayout is=\"webview\" style={{ gridTemplateColumns: templateColumns + \" 1fr\" }}>\n      {columnHeaders.map((columnHeader, index) => (\n        <gridheader key={index} is=\"webview\" className={index === 0 ? \"first-col\" : index === columnHeaders.length - 1 ? \"last-col\" : undefined}>\n          <Typography\n            variant=\"body2\"\n            sx={{\n              display: \"flex\",\n              color: \"#61c6ef\",\n              lineHeight: 1.8,\n              fontSize: \"0.65rem\",\n              fontWeight: 600,\n              letterSpacing: \"0.03333em\"\n            }}>\n            {columnHeader}\n          </Typography>\n        </gridheader>\n      ))}\n      {children}\n    </gridlayout>\n  )\n}\n","import { Card, Divider, Typography } from \"@mui/material\"\nimport React from \"react\"\nimport MDBox from \"../../../components/MDBox\"\nimport MDAvatar from \"../../../components/MDAvatar\"\nimport { useQuery } from \"@supabase-cache-helpers/postgrest-swr\"\nimport { supabase } from \"../../../supabaseClient\"\nimport LogoLoading from \"../../../components/Suspense/CoverLoading/LogoLoading\"\nimport ErrorFallback from \"../../../components/Suspense/ErrorBoundary/ErrorFallback\"\nimport goldIcon from \"../../../icons/goldIcon.png\"\nimport silver from \"../../../icons/silver.png\"\nimport bronze from \"../../../icons/bronze.png\"\nimport { Link } from \"react-router-dom\"\nimport Table from \"../../../components/Table\"\n\nconst Leaderboard = () => {\n  const {\n    data: leaderboard,\n    error: leaderboardError,\n    isLoading: leaderboardLoading\n  } = useQuery(supabase.rpc(\"get_contest_leaderboard\"), {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  })\n\n  const sortedLeaderboard = leaderboard && leaderboard.slice().sort((a, b) => b.total_profits - a.total_profits)\n  const positionIcons = [\n    <img src={goldIcon} alt=\"Gold Icon\" style={{ width: \"50px\" }} />,\n    <img src={silver} alt=\"Silver Icon\" style={{ width: \"50px\" }} />,\n    <img src={bronze} alt=\"Bronze Icon\" style={{ width: \"50px\" }} />\n  ]\n\n  if (leaderboardError) return <ErrorFallback error={leaderboardError.message} />\n  if (leaderboardLoading) return <LogoLoading />\n  return (\n    <Card sx={{ mt: 3, overflow: \"hidden\", overflowY: \"scroll\" }} data-test-id=\"topNetworkers\">\n      <Typography variant=\"h6\" pt={2} pb={1} sx={{ fontSize: \"18px\", px: 2, width: \"100%\" }}>\n        Leaderboard\n      </Typography>\n      <Table columnHeaders={[\"POSITION\", \"NAME\", \"TOTAL PROFITS\"]}>\n        {leaderboard?.length > 0 &&\n          sortedLeaderboard?.map((leaderboard, index) => (\n            <>\n              <Typography\n                className=\"first-col\"\n                variant=\"body2\"\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  letterSpacing: \"0.03333em\",\n                  textTransform: \"capitalize\",\n                  fontSize: \"0.9rem\",\n                  color: \"#7b809a\",\n                  fontWeight: 500\n                }}>\n                {index < positionIcons.length ? positionIcons[index] : <span style={{ paddingLeft: \"16px\" }}>{index + 1 + \"°\"}</span>}\n              </Typography>\n              <Link to={`/${leaderboard.username}`}>\n                <MDBox\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    overflow: \"visible\",\n                    alignItems: \"center\",\n                    justifyContent: \"start\",\n                    textAlign: \"start\",\n                    gap: \"15px\"\n                  }}>\n                  <MDAvatar\n                    sx={{\n                      width: \"36px\",\n                      height: \"36px\"\n                    }}\n                    alt=\"profile\"\n                    shadow=\"sm\"\n                    src={leaderboard.avatar}\n                    fetchpriority={index < 8 ? \"height\" : \"auto\"}\n                    loading={index < 8 ? \"eager\" : \"lazy\"}\n                  />\n                  <Typography\n                    variant=\"body2\"\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"start\",\n                      textTransform: \"capitalize\",\n                      overflow: \"hidden\",\n                      flexWrap: \"wrap\",\n                      letterSpacing: \"0.03333em\",\n                      fontSize: \"0.9rem\",\n                      color: \"#7b809a\",\n                      fontWeight: 500\n                    }}>\n                    {leaderboard.username}\n                  </Typography>\n                </MDBox>\n              </Link>\n              <Typography\n                className=\"last-col\"\n                variant=\"body2\"\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  letterSpacing: \"0.03333em\",\n                  textTransform: \"capitalize\",\n                  overflow: \"visible\",\n                  flexWrap: \"wrap\",\n                  fontSize: \"0.9rem\",\n                  color: \"#7b809a\",\n                  textAlign: \"center\",\n                  fontWeight: 500\n                }}>\n                {leaderboard.total_profits.toLocaleString(\"en-US\")} USDT\n              </Typography>\n            </>\n          ))}\n      </Table>\n    </Card>\n  )\n}\n\nexport default Leaderboard\n","import { Card, Divider, Grid, Icon } from \"@mui/material\"\nimport MDBox from \"../../components/MDBox\"\nimport MDTypography from \"../../components/MDTypography\"\nimport { Link, useLocation, useNavigate } from \"react-router-dom\"\nimport profitIcon from \"../../icons/profit.js\"\nimport AlmostCompleted from \"../../pages/dashboard/AlmostCompleted\"\nimport NewOnMarket from \"../../pages/dashboard/NewOnMarket\"\nimport { supabase } from \"../../supabaseClient\"\nimport reportsBarChartData from \"../../pages/dashboard/data/reportsBarChartData\"\nimport ReportsBarChart from \"../../examples/Charts/BarCharts/ReportsBarChart\"\nimport autographIcon from \"../../icons/autographIcon\"\nimport iconNetworkGroup from \"../../icons/iconNetworkGroup\"\nimport { useQuery } from \"@supabase-cache-helpers/postgrest-swr\"\nimport LogoLoading from \"../../components/Suspense/CoverLoading/LogoLoading\"\nimport ErrorFallback from \"../../components/Suspense/ErrorBoundary/ErrorFallback\"\nimport { horizontalLogo } from \"../../logos/logo\"\nimport Leaderboard from \"./Leaderboard/Leaderboard\"\n\nfunction DashboardPage() {\n  const { pathname } = useLocation()\n  const navigate = useNavigate()\n  const { data: dashboard_data, error, isLoading } = useQuery(supabase.rpc(\"get_dashboard_page\"))\n  if (dashboard_data?.my_investments === 0 && dashboard_data?.my_network === 0 && pathname !== \"/dashboard\") navigate(\"/market\")\n\n  if (isLoading) return <LogoLoading />\n  if (error) return <ErrorFallback error={error.message} />\n\n  return (\n    <>\n      <MDBox display=\"flex\" justifyContent=\"space-between\">\n        <MDBox width={\"100%\"} display=\"flex\" justifyContent=\"center\" py={2} ml={\"-1%\"}>\n          {horizontalLogo}\n        </MDBox>\n      </MDBox>\n      <MDBox pb={11} pt={2.6}>\n        <Grid container spacing={2.5}>\n          <Grid item xs={12} md={6} lg={3}>\n            <Link to=\"/investments\" key={1} rel=\"noreferrer\" data-test-id=\"container-my-investments\">\n              <MDBox pb={1.5}>\n                {dashboard_data && (\n                  <StatisticsCard\n                    icon={autographIcon}\n                    title=\"My Investments\"\n                    color=\"info\"\n                    count={dashboard_data?.my_investments}\n                    currency={\"USDT\"}\n                    percentage={{\n                      color: \"info\",\n                      amount: `+${dashboard_data?.investment_increase.toLocaleString(\"en-US\")} USDT`,\n                      label: \"this week\"\n                    }}\n                  />\n                )}\n                {isLoading && \"skeleton\"}\n              </MDBox>\n            </Link>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <Link to={\"/profits\"} key={1} rel=\"noreferrer\" data-test-id=\"container-my-profits\">\n              <MDBox mb={1.5} pt={0.5}>\n                {dashboard_data && (\n                  <StatisticsCard\n                    color=\"success\"\n                    icon={profitIcon}\n                    title=\"My Profits\"\n                    count={dashboard_data?.my_profits}\n                    currency=\"USDT\"\n                    percentage={{\n                      color: \"success\",\n                      amount: `+${dashboard_data?.profits_increase.toLocaleString(\"en-US\")} USDT`,\n                      label: \"this week\"\n                    }}\n                  />\n                )}\n                {isLoading && \"skeleton\"}\n              </MDBox>\n            </Link>\n          </Grid>\n          <Grid item xs={12} md={6} lg={3}>\n            <Link to={\"/network\"} key={1} rel=\"noreferrer\" data-test-id=\"container-my-network\">\n              <MDBox mb={1.5} pt={0.3}>\n                {dashboard_data && (\n                  <StatisticsCard\n                    color=\"warning\"\n                    icon={iconNetworkGroup}\n                    title=\"My Network\"\n                    count={dashboard_data?.my_network}\n                    percentage={{\n                      color: \"warning\",\n                      amount: `+${dashboard_data?.network_increase.toLocaleString(\"en-US\")}`,\n                      label: \"this week\"\n                    }}\n                  />\n                )}\n                {isLoading && \"skeleton\"}\n              </MDBox>\n            </Link>\n          </Grid>\n        </Grid>\n        <Leaderboard />\n        <MDBox mt={7.5} mb={1.5}>\n          <Grid container spacing={3} pb={3}>\n            <Grid item xs={12} md={6} lg={4}>\n              <Link to={\"/profits\"} key={1} data-test-id=\"container-daily-profits\" rel=\"noreferrer\">\n                <MDBox>\n                  {dashboard_data && (\n                    <ReportsBarChart\n                      color=\"success\"\n                      title=\"Daily Profits\"\n                      date=\"campaign sent 2 days ago\"\n                      chart={reportsBarChartData}\n                      amount={dashboard_data?.amount}\n                      data={dashboard_data}\n                      this_day_profits={dashboard_data?.this_day_profits || 0}\n                    />\n                  )}\n                  {isLoading && \"skeleton\"}\n                </MDBox>\n              </Link>\n            </Grid>\n          </Grid>\n        </MDBox>\n        <MDBox>\n          <Grid container spacing={3}>\n            <AlmostCompleted almost_completed={dashboard_data?.almost_completed} />\n            <NewOnMarket new_houses={dashboard_data?.new_houses} />\n          </Grid>\n        </MDBox>\n      </MDBox>\n    </>\n  )\n}\nfunction StatisticsCard({ color, title, count, percentage, icon, currency }) {\n  return (\n    <Card>\n      <MDBox display=\"flex\" justifyContent=\"space-between\" pt={1} px={2}>\n        <MDBox\n          variant=\"gradient\"\n          bgColor={color}\n          color={color === \"light\" ? \"dark\" : \"white\"}\n          coloredShadow={color}\n          borderRadius=\"xl\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          width=\"4rem\"\n          height=\"4rem\"\n          mt={-2.9}>\n          <Icon sx={{ fontSize: \"1.8rem !important\", color: \"#fff\" }}>{icon}</Icon>\n        </MDBox>\n        <MDBox textAlign=\"right\" lineHeight={1.3}>\n          <MDTypography variant=\"button\" fontWeight=\"medium\" color=\"text\">\n            {title}\n          </MDTypography>\n          <br />\n          <MDTypography component={\"span\"} lineHeight={0} fontSize={\"1.5rem\"} fontWeight=\"medium\" color={color}>\n            {count.toLocaleString(\"en-US\")}\n          </MDTypography>\n          <MDTypography pl={0.3} fontSize={\"0.7rem\"} variant={\"caption\"} fontWeight=\"medium\" color={color}>\n            {currency}\n          </MDTypography>\n        </MDBox>\n      </MDBox>\n      <Divider />\n      <MDBox pb={2} px={2}>\n        <MDTypography component=\"p\" variant=\"button\" color=\"text\" display=\"flex\">\n          <MDTypography component=\"span\" variant=\"button\" fontWeight=\"bold\" color={percentage.color}>\n            {percentage.amount}\n          </MDTypography>\n          &nbsp;{percentage.label}\n        </MDTypography>\n      </MDBox>\n    </Card>\n  )\n}\nexport default DashboardPage\n","'use client';\n\nimport PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["SmallHouseItem","_ref","link","duration","address","name","pic","caption","value","loading","priority","_jsx","Link","to","rel","sx","textDecoration","onClick","handleItemClick","trackEvent","children","_jsxs","Box","display","alignItems","gap","marginBottom","src","alt","width","height","style","borderRadius","objectFit","aspectRatio","overflowClipMargin","overflow","fetchpriority","justifyContent","pl","Typography","variant","fontFamily","letterSpacing","fontSize","paddingBottom","lineHeight","opacity","color","fontWeight","padding","locationIcon","margin","marginTop","paddingTop","timeIcon","toLocaleString","component","float","fill","className","focusable","viewBox","d","Title","_ref2","_Fragment","MDBox","pt","MDTypography","Divider","almost_completed","length","Grid","item","xs","md","lg","Card","pb","px","container","spacing","map","house","index","xl","DefaultInvestmentCard","id","houseid","image","label","location","title","personalProgress","invested","networkProgress","reached","missingProgress","total","period","new_houses","p","mb","mt","React","house_id","price","investmentId","labels","datasets","data","tension","borderWidth","borderSkipped","backgroundColor","maxBarThickness","options","responsive","maintainAspectRatio","plugins","legend","interaction","intersect","mode","scales","y","grid","drawBorder","drawOnChartArea","drawTicks","borderDash","ticks","suggestedMin","suggestedMax","beginAtZero","font","size","weight","family","x","ReportsBarChart","description","chart","this_day_profits","configs","amount","salesData","useMemo","bgColor","coloredShadow","py","pr","Bar","textTransform","flexDirection","defaultProps","Table","columnHeaders","templateColumns","Array","join","is","gridTemplateColumns","columnHeader","undefined","Leaderboard","leaderboard","error","leaderboardError","isLoading","leaderboardLoading","useQuery","supabase","rpc","revalidateOnFocus","revalidateOnReconnect","sortedLeaderboard","slice","sort","a","b","total_profits","positionIcons","goldIcon","silver","bronze","ErrorFallback","message","LogoLoading","overflowY","paddingLeft","concat","username","textAlign","MDAvatar","shadow","avatar","flexWrap","StatisticsCard","count","percentage","icon","currency","Icon","pathname","useLocation","navigate","useNavigate","dashboard_data","my_investments","my_network","ml","horizontalLogo","autographIcon","investment_increase","profitIcon","my_profits","profits_increase","iconNetworkGroup","network_increase","date","reportsBarChartData","AlmostCompleted","NewOnMarket","createBox"],"sourceRoot":""}