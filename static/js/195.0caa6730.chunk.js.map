{"version":3,"file":"static/js/195.0caa6730.chunk.js","mappings":"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","sources":["icons/EditIcon.js","icons/ErrorIcon.js","icons/AddIcon.js","icons/DeleteIcon.js","../node_modules/@mui/icons-material/esm/AssuredWorkload.js","pages/settings/WalletsList.js","icons/personIcon.js","icons/editIconTooltip.js","pages/settings/AccountDetails.js","icons/IconSettings.js","icons/downloadIcon.js","icons/shareIosIcon.js","icons/addIosIcon.js","examples/InstallApp/InstallButton.js","pages/settings/index.js","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { Tooltip } from \"@mui/material\"\nimport React from \"react\"\n\nfunction EditIcon({ onClick, tooltipText, color }) {\n  return (\n    <Tooltip title={tooltipText} placement=\"top\">\n      <button\n        color={color}\n        onClick={onClick}\n        data-test-id=\"account-details-btn-edit-icon\"\n        style={{\n          backgroundColor: \"transparent\",\n          border: \"none\",\n          color: \"#344767\",\n          fontSize: \"16px\",\n          cursor: \"pointer\",\n          zIndex: 999\n        }}>\n        <svg\n          style={{ width: \"1rem\", height: \"1rem\", fill: \"currentColor\" }}\n          className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-eimhud-MuiSvgIcon-root\"\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          viewBox=\"0 0 24 24\"\n          data-testid=\"EditIcon\">\n          <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"></path>\n        </svg>\n      </button>\n    </Tooltip>\n  )\n}\n\nexport default EditIcon\n","import { Tooltip, Typography } from \"@mui/material\"\nimport React from \"react\"\n\nfunction ErrorIcon({ tooltipText }) {\n  return (\n    <Tooltip title={tooltipText} placement=\"top\">\n      <Typography\n        component=\"span\"\n        variant=\"body2\"\n        style={{\n          display: \"inline-block\",\n          border: \"none\",\n          fontSize: \"16px\",\n          cursor: \"pointer\",\n          paddingRight: \"5px\"\n        }}>\n        <svg\n          width={\"15px\"}\n          className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-15p8kyl-MuiSvgIcon-root\"\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          viewBox=\"0 0 24 24\"\n          data-testid=\"ErrorIcon\"\n          aria-label=\"Not Verified\"\n          data-mui-internal-clone-element=\"true\">\n          <path fill={\"red\"} d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"></path>\n        </svg>\n      </Typography>\n    </Tooltip>\n  )\n}\n\nexport default ErrorIcon\n","import { Tooltip } from \"@mui/material\"\nimport React from \"react\"\n\nfunction AddIcon({ onClick, tooltipText, sx }) {\n  return (\n    <Tooltip title={tooltipText} placement=\"top\">\n      <button\n        onClick={onClick}\n        style={{\n          backgroundColor: \"transparent\",\n          border: \"none\",\n          color: \"#344767\",\n          fontSize: \"16px\",\n          cursor: \"pointer\",\n          ...sx\n        }}>\n        <svg\n          style={{ width: \"1rem\", height: \"1rem\", fill: \"currentColor\" }}\n          className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-eimhud-MuiSvgIcon-root\"\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          viewBox=\"0 0 24 24\"\n          data-testid=\"AddIcon\">\n          <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n        </svg>\n      </button>\n    </Tooltip>\n  )\n}\n\nexport default AddIcon\n","import { Tooltip } from \"@mui/material\"\nimport React from \"react\"\n\nfunction DeleteIcon({ onClick, tooltipText }) {\n  return (\n    <Tooltip title={tooltipText} placement=\"top\">\n      <button\n        onClick={onClick}\n        style={{\n          backgroundColor: \"transparent\",\n          border: \"none\",\n          color: \"#344767\",\n          fontSize: \"16px\",\n          cursor: \"pointer\"\n        }}>\n        <svg\n          style={{ width: \"1rem\", height: \"1rem\", fill: \"currentColor\" }}\n          className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-eimhud-MuiSvgIcon-root\"\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          viewBox=\"0 0 24 24\"\n          data-testid=\"DeleteIcon\">\n          <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n        </svg>\n      </button>\n    </Tooltip>\n  )\n}\n\nexport default DeleteIcon\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 10h2v7H5zm6 0h2v7h-2zm11-4L12 1 2 6v2h20zM2 19v2h12.4c-.21-.64-.32-1.31-.36-2H2zm17-6.74V10h-2v3.26zM20 14l-4 2v2.55c0 2.52 1.71 4.88 4 5.45 2.29-.57 4-2.93 4-5.45V16l-4-2zm-.72 7-2.03-2.03 1.06-1.06.97.97 2.41-2.38 1.06 1.06L19.28 21z\"\n}), 'AssuredWorkload');","import React, { forwardRef, useState } from \"react\"\nimport MDBox from \"../../components/MDBox\"\nimport { Card, CardHeader, Dialog, DialogActions, Divider, Slide, TextField, Tooltip, Typography } from \"@mui/material\"\nimport AddIcon from \"../../icons/AddIcon\"\nimport ErrorIcon from \"../../icons/ErrorIcon\"\nimport EditIcon from \"../../icons/EditIcon\"\nimport DeleteIcon from \"../../icons/DeleteIcon\"\nimport MDButton from \"../../components/MDButton\"\nimport MDTypography from \"../../components/MDTypography\"\nimport { supabase } from \"../../supabaseClient\"\nimport { useToast } from \"@dalgu/react-toast\"\nimport trackEvent, { useAuth } from \"../../components/context\"\nimport { AssuredWorkload } from \"@mui/icons-material\"\nimport { useNavigate } from \"react-router\"\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport const WalletsList = ({ wallets, updateFn }) => {\n  const { showToast } = useToast()\n  const user = useAuth()\n  const navigate = useNavigate()\n  const [openCancelConfirmation, setOpenCancelConfirmation] = useState(false)\n  const [addressInEditMode, setAddressInEditMode] = useState(\"\")\n  const [walletName, setWalletName] = useState(\"\")\n\n  const updateWalletName = async address => {\n    if (walletName === \"\") {\n      showToast(\"Empty value not accepted\")\n      return\n    }\n    const { error } = await supabase.from(\"wallets\").update({ wallet_name: walletName }).eq(\"address\", address).eq(\"owned_by\", user?.user_metadata?.username)\n    if (error) {\n      showToast(`Failed to update wallet name: ${error.message}`)\n    } else {\n      showToast(\"Wallet name updated successfully\")\n      setAddressInEditMode(\"\")\n      setWalletName(\"\")\n      updateFn()\n    }\n  }\n  const deleteWallet = async () => {\n    const { error } = await supabase.from(\"wallets\").delete().eq(\"address\", openCancelConfirmation).eq(\"owned_by\", user?.user_metadata?.username)\n    if (error) {\n      showToast(`Failed to delete wallet: ${error.message}`)\n    } else {\n      showToast(\"Wallet deleted successfully\")\n      setOpenCancelConfirmation(false)\n      updateFn()\n    }\n  }\n\n  const handleAddIconBtn = () => {\n    navigate(\"/addwallet\")\n    trackEvent(\"addwallet\")\n  }\n\n  return (\n    <Tooltip width=\"100%\" title=\"This component is blocked by Alpha testing.\">\n      <Card px={2} sx={{ paddingBottom: \"18px\", opacity: 0.5 }} color=\"#344767\">\n        <MDBox display=\"flex\" justifyContent=\"space-between\" pr={2}>\n          <CardHeader avatar={<AssuredWorkload />} titleTypographyProps={{ style: { fontSize: \"20px\", fontWeight: \"bold\" } }} title=\"Linked Wallets\" />\n          {/* <AddIcon tooltipText=\"Add\" onClick={() => navigate(\"/addwallet\")} /> Do not delete this is commented temporarily */}\n          {/* <AddIcon tooltipText=\"Add\" onClick={handleAddIconBtn} /> Do not delete this is commented temporarily */}\n          <AddIcon sx={{ transform: \"translate(-3px, 3px)\" }} />\n        </MDBox>\n        {wallets\n          .sort((a, b) => a.address.toLowerCase().localeCompare(b.address.toLowerCase()))\n          .map((wallet, index) => (\n            <>\n              <MDBox display=\"flex\" justifyContent=\"space-between\" pr={2} pl={1} pt={0.8} pb={0.9}>\n                {addressInEditMode === wallet.address ? (\n                  <TextField\n                    value={walletName}\n                    onChange={event => setWalletName(event.target.value)}\n                    type=\"text\"\n                    size=\"small\"\n                    sx={{\n                      padding: \"5px\",\n                      width: \"160px\",\n                      textAlign: \"right\",\n                      borderRadius: \"3px\",\n                      fontWeight: \"400\",\n                      fontSize: \"0.875rem\",\n                      fontFamily: '\"Roboto\",\"Helvetica\",\"Arial\",sans-serif'\n                    }}\n                    placeholder={wallet.name}\n                  />\n                ) : (\n                  <MDTypography\n                    variant=\"h6\"\n                    pl={1.5}\n                    pr={3}\n                    sx={{\n                      width: \"160px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      fontWeight: 700,\n                      lineHeight: 1.5,\n                      textTransform: \"capitalize\",\n                      fontSize: \"0.875rem\",\n                      letterSpacing: \"0.02857em\",\n                      fontFamily: '\"Roboto\", Helvetica, Arial, sans-serif',\n                      opacity: 1\n                    }}>\n                    {shorten(wallet.name)}\n                  </MDTypography>\n                )}\n                <MDBox display=\"flex\" alignItems=\"center\" justifyContent=\"center\" pr={5}>\n                  {wallet.verified && <ErrorIcon tooltipText=\"Not Verified\" />}\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      lineHeight: 1.5,\n                      padding: \"5px\",\n                      fontSize: \"0.875rem\",\n                      fontWeight: 400,\n                      letterSpacing: \"0.02857em\",\n                      color: \"rgb(123, 128, 154)\",\n                      fontFamily: '\"Roboto\", Helvetica, Arial, sans-serif'\n                    }}>\n                    {shorten(wallet.address)}\n                  </Typography>\n                </MDBox>\n                <MDBox display=\"flex\" gap={1}>\n                  <EditIcon\n                    fontSize={\"inherit\"}\n                    tooltipText=\"Edit\"\n                    onClick={() => {\n                      setAddressInEditMode(prevWalletAddress => (prevWalletAddress !== wallet.address ? wallet.address : \"\"))\n                      setWalletName(\"\")\n                    }}\n                  />\n                  <DeleteIcon tooltipText=\"Delete\" onClick={() => setOpenCancelConfirmation(wallet.address)} />\n                </MDBox>\n              </MDBox>\n              {index !== wallets?.length - 1 && <Divider />}\n              {addressInEditMode === wallet.address && (\n                <MDBox pl={2} pt={1.5} pb={2.5} display=\"flex\" alignItems=\"center\" gap={1}>\n                  <MDButton p=\"1\" size=\"small\" variant=\"gradient\" color=\"info\" onClick={() => updateWalletName(wallet.address)}>\n                    Save\n                  </MDButton>\n                  <MDButton\n                    onClick={() => {\n                      setAddressInEditMode(\"\")\n                      setWalletName(\"\")\n                    }}\n                    data-test-id=\"account-details-btn-cancel\">\n                    Cancel\n                  </MDButton>\n                </MDBox>\n              )}\n            </>\n          ))}\n        {wallets?.length === 0 && (\n          <Typography\n            variant=\"body1\"\n            px={2}\n            sx={{\n              fontSize: \"1rem\",\n              lineHeight: 1.375,\n              fontWeight: 400,\n              letterSpacing: \"0em\",\n              opacity: 1,\n              textTransform: \"none\",\n              verticalAlign: \"unset\",\n              color: \"#7b809a\",\n              margin: 0,\n              fontFamily: '\"Roboto\", \"Helvetica\", sansSerif'\n            }}>\n            You haven't linked a wallet yet. <br />\n            <Typography component=\"span\" sx={{ fontSize: \"1rem\", lineHeight: 1.375, fontWeight: 500, letterSpacing: \"0em\", pr: \"5px\", opacity: 1 }}>\n              Click\n            </Typography>\n            {/* <AddIcon sx={{ transform: \"translate(-3px, 3px)\" }} onClick={handleAddIconBtn} />  Do not delete this is commented temporarily */}\n            <AddIcon sx={{ transform: \"translate(-3px, 3px)\" }} />\n            to add a wallet to your account!\n          </Typography>\n        )}\n        <Dialog\n          open={openCancelConfirmation}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={() => setOpenCancelConfirmation(false)}\n          aria-describedby=\"alert-dialog-slide-description\"\n          maxWidth=\"sm\"\n          fullWidth>\n          <MDBox p={2.5} pb={0}>\n            <MDTypography variant=\"h6\">Are you sure you want to unlink this wallet?</MDTypography>\n            <MDTypography fontSize={14} color=\"text\">\n              You will have to verify this wallet again to use it in the app.\n            </MDTypography>\n          </MDBox>\n          <DialogActions>\n            <MDButton onClick={() => setOpenCancelConfirmation(false)}>Cancel</MDButton>\n            <MDButton color=\"info\" variant=\"gradient\" onClick={deleteWallet}>\n              Delete\n            </MDButton>\n          </DialogActions>\n        </Dialog>\n      </Card>\n    </Tooltip>\n  )\n}\n\nfunction shorten(address) {\n  const shortAddressBegin = address.substring(0, 4)\n  const shortAddressEnd = address.substring(address?.length - 4, address?.length)\n  return address?.length > 20 ? `${shortAddressBegin}......${shortAddressEnd}` : address\n}\n","const personIcon = (\n  <svg\n    width={20}\n    className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit material-icons-round notranslate MuiIcon-root MuiIcon-fontSizeInherit css-1ptyjuo-MuiSvgIcon-root-MuiIcon-root\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    data-testid=\"PersonIcon\">\n    <path fill=\"currentColor\" d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"></path>\n  </svg>\n)\n\nexport default personIcon\n","const editIconTooltip = (\n  <svg\n    style={{ width: \"1rem\", height: \"1rem\", fill: \"#fff\", position: \"relative\", top: \"2px\", paddingTop: \"2px\", overflow: \"visible\" }}\n    className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-eimhud-MuiSvgIcon-root\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    data-testid=\"EditIcon\">\n    <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"></path>\n  </svg>\n)\n\nexport default editIconTooltip\n","import React, { useState } from \"react\"\nimport \"./AccountDetails.css\"\nimport { Box, Card, CardContent, Typography, FormControl, Button, TextField, Switch } from \"@mui/material\"\nimport { supabase } from \"../../supabaseClient\"\nimport { useToast } from \"@dalgu/react-toast\"\nimport ErrorIcon from \"../../icons/ErrorIcon\"\nimport EditIcon from \"../../icons/EditIcon\"\nimport personIcon from \"../../icons/personIcon\"\nimport { useAuth } from \"../../components/context\"\nimport CustomTooltip from \"../balance/components/DefaultInfoCard/CustomTooltip\"\nimport editIconTooltip from \"../../icons/editIconTooltip\"\n\nexport const AccountDetails = ({ data, updateSettingsDataFn }) => {\n  const { showToast } = useToast()\n\n  const [isEditingEnabled, setIsEditingEnabled] = useState(false)\n  const [isUpdating, setIsUpdating] = useState(false)\n  const { username, display_name, email, phone, email_change, confirmed_email, profile_public, password } = data\n  //if there is an email_change value we should print that instead of the confirmed email\n  // (but with a red icon to show that it's not confirmed yet)\n  const [profileInfoState, setProfileInfoState] = useState({\n    displayName: display_name || username,\n    email: email,\n    confirmed_email: email_change,\n    phoneNumber: phone,\n    password: password\n  })\n  const user = useAuth()\n  const [profileIsPublic, setProfileIsPublic] = useState(profile_public)\n\n  const handleSwitchChange = event => {\n    setProfileIsPublic(!profileIsPublic)\n  }\n\n  const handleModifyClick = () => {\n    setIsEditingEnabled(!isEditingEnabled)\n    setProfileIsPublic(profile_public)\n  }\n  const handleCancelClick = () => {\n    setIsEditingEnabled(false)\n    setProfileIsPublic(profile_public)\n    setProfileInfoState(prevState => ({\n      ...prevState,\n      email: email,\n      displayName: display_name,\n      phoneNumber: phone,\n      password: password\n    }))\n  }\n  const handleSaveClick = async () => {\n    setIsUpdating(true)\n    const { error } = await supabase.auth.updateUser({\n      password: profileInfoState.password || undefined,\n      email: profileInfoState.email || undefined,\n      phone: profileInfoState.phoneNumber || undefined\n    })\n\n    if (error) {\n      showToast(error.message)\n    } else {\n      showToast(\"User updated successfully\")\n    }\n    const { error: updateError } = await supabase\n      .from(\"profiles\")\n      .update({\n        display_name: profileInfoState.displayName,\n        email: profileInfoState.email,\n        public_profile: profileIsPublic\n      })\n      .eq(\"username\", user.user_metadata.username)\n\n    if (profileInfoState.displayName === \"\" || profileInfoState.email === \"\") {\n      showToast(\"Empty values not accepted\")\n    } else if (updateError) {\n      showToast(`Failed to update data: ${updateError.message}`)\n    } else {\n      showToast(\"Data updated successfully\")\n      console.log(\"ooooo\")\n      updateSettingsDataFn()\n      setIsEditingEnabled(false)\n      setIsUpdating(false)\n    }\n  }\n\n  const handlePhoneNumberChange = event => {\n    const value = event.target.value\n    setProfileInfoState(prevState => ({\n      ...prevState,\n      phoneNumber: value\n    }))\n  }\n  const handleLogout = async () => {\n    const { error } = await supabase.auth.signOut()\n    if (error) showToast(\"Failed to logout:\", error.message)\n    else window.location.href = window.location.protocol + \"//\" + window.location.host\n  }\n  return (\n    <Box className=\"account-details-container\" sx={{ display: \"flex\", flexDirection: \"column\", paddingBottom: \"40px\" }}>\n      <Card className=\"card-container\">\n        <CardContent className=\"card-content\">\n          <Box className=\"header-container\" pt=\"20px\">\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n              <Typography variant=\"h5\">\n                {personIcon}\n                account details\n              </Typography>\n            </Box>\n            <EditIcon onClick={handleModifyClick} tooltipText={\"Edit\"} />\n          </Box>\n          <FormControl onSubmit={handleSaveClick} variant=\"standard\" className=\"form-container\">\n            <Box>\n              <Typography variant=\"h5\">Display Name</Typography>\n              {isEditingEnabled ? (\n                <TextField\n                  data-test-id=\"account-details-input-display-name\"\n                  id=\"displayName\"\n                  required\n                  placeholder=\"Enter your Name\"\n                  size=\"small\"\n                  value={profileInfoState.displayName}\n                  onChange={event =>\n                    setProfileInfoState(prevState => ({\n                      ...prevState,\n                      displayName: event.target.value\n                    }))\n                  }\n                />\n              ) : (\n                <Typography>{profileInfoState.displayName}</Typography>\n              )}\n            </Box>\n            <Box>\n              <Typography variant=\"h5\">Email</Typography>\n              {isEditingEnabled ? (\n                <TextField\n                  data-test-id=\"account-details-input-input-email\"\n                  id=\"email\"\n                  type=\"email\"\n                  required\n                  placeholder=\"example@email.com\"\n                  size=\"small\"\n                  value={profileInfoState.email}\n                  onChange={event =>\n                    setProfileInfoState(prevState => ({\n                      ...prevState,\n                      email: event.target.value\n                    }))\n                  }\n                  error={profileInfoState.email === \"email\"}\n                />\n              ) : (\n                <Typography sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                  {/* {profileInfoState.email !== profileInfoState.confirmed_email && (\n                    <span\n                      style={{\n                        color: \"red\",\n                        display: \"inline-block\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        height: \"22px\"\n                      }}>\n                      <ErrorIcon tooltipText={\"Not Verified\"} />\n                    </span>\n                  )} */}\n                  {profileInfoState.email}\n                </Typography>\n              )}\n            </Box>\n            {/* disabled until we configure Twilio account DO NOT DELETE\n            <Box>\n              <Typography variant=\"h5\">Mobile</Typography>\n              <Box className=\"tooltip-container\">\n                {!isEditingEnabled && (\n                  <Tooltip title=\"Not Verified\" placement=\"top\" sx={{ color: \"red\" }}>\n                    <IconButton>\n                      <ErrorIcon />\n                    </IconButton>\n                  </Tooltip>\n                )}\n                {isEditingEnabled ? (\n                  <TextField\n                    id=\"mobile\"\n                    type=\"number\"\n                    required\n                    placeholder=\"Enter your phone number\"\n                    size=\"small\"\n                    value={profileInfoState.phoneNumber}\n                    onChange={(event) =>\n                      setProfileInfoState((prevState) => ({\n                        ...prevState,\n                        phoneNumber: event.target.value,\n                      }))\n                    }\n                    onClick={handlePhoneNumberChange}\n                  />\n                ) : (\n                  <Typography>{profileInfoState.phoneNumber}</Typography>\n                )}\n              </Box>\n            </Box> */}\n            <Box>\n              <Typography variant=\"h5\">Password</Typography>\n              {isEditingEnabled ? (\n                <TextField\n                  data-test-id=\"account-details-input-input-password\"\n                  id=\"password\"\n                  type=\"password\"\n                  required\n                  placeholder=\"********\"\n                  size=\"small\"\n                  value={profileInfoState.password}\n                  onChange={event =>\n                    setProfileInfoState(prevState => ({\n                      ...prevState,\n                      password: event.target.value\n                    }))\n                  }\n                />\n              ) : (\n                <Typography>********</Typography>\n              )}\n            </Box>\n            <Box\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                alignItems: \"end\",\n                gap: \"15px\"\n              }}>\n              <Box className=\"public-profile\">\n                <Typography variant=\"h5\">Public Profile</Typography>\n                {/* <Switch checked={profileIsPublic} color=\"primary\" disabled={!isEditingEnabled} onChange={handleSwitchChange} /> */}\n                <Box sx={{ display: \"flex\", justifyContent: \"start\" }}>\n                  <CustomTooltip title={<span>Click {editIconTooltip} to modify your profile.</span>} disabled={!isEditingEnabled}>\n                    <Switch\n                      checked={profileIsPublic}\n                      color=\"primary\"\n                      data-test-id=\"account-details-switch\"\n                      disabled={!isEditingEnabled}\n                      onChange={handleSwitchChange}\n                    />\n                  </CustomTooltip>\n                </Box>\n              </Box>\n            </Box>\n\n            <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", mt: \"13px\" }}>\n              <Typography variant=\"h5\">App Version</Typography>\n              <Typography fontSize=\"12px\">0.0.19</Typography>\n            </Box>\n            {/* <CardActions className=\"btn-container\" sx={{ display: \"flex\", justifyContent: \"end\" }}> */}\n            <Box className=\"btn-container\">\n              {isEditingEnabled ? (\n                <React.Fragment>\n                  {/* {showConfirm ? (\n                    <Box pr={4} className=\"container-confirmation\">\n                      <Typography variant=\"h6\">Are you sure you want to cancel?</Typography>\n                      <button\n                        onClick={() => handleConfirmation(true)}\n                        style={{ backgroundColor: \"transparent\", border: \"none\", color: \"green\", fontSize: \"18px\" }}>\n                        Yes\n                      </button>\n                      <button\n                        onClick={() => handleConfirmation(false)}\n                        style={{ backgroundColor: \"transparent\", border: \"none\", color: \"red\", fontSize: \"18px\" }}>\n                        No\n                      </button>\n                    </Box>\n                  ) : ( */}\n                  <Button variant=\"text\" sx={{ color: \"#9296ac\" }} onClick={handleCancelClick}>\n                    Cancel\n                  </Button>\n\n                  <Button disabled={isUpdating} variant=\"contained\" type=\"submit\" onClick={handleSaveClick} data-test-id=\"account-details-input-btn-save\">\n                    Save\n                  </Button>\n                </React.Fragment>\n              ) : (\n                <button\n                  onClick={handleLogout}\n                  data-test-id=\"account-details-btn-logout\"\n                  style={{ color: \"#9296ac\", background: \"transparent\", border: \"none\", paddingTop: \"5px\", cursor: \"pointer\", fontSize: \"16px\" }}>\n                  Logout\n                </button>\n              )}\n            </Box>\n          </FormControl>\n        </CardContent>\n      </Card>\n    </Box>\n  )\n}\n","const IconSettings = (\n  <svg style={{ width: \"1.5rem\", height: \"1.5rem\" }} focusable=\"false\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" data-testid=\"SettingsIcon\">\n    <path\n      fill=\"currentColor\"\n      d=\"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"></path>\n  </svg>\n)\n\nexport default IconSettings\n","const downloadIcon = (\n  <svg width={15} focusable=\"false\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" data-testid=\"DownloadOutlinedIcon\">\n    <path fill=\"currentColor\" d=\"M19 9h-4V3H9v6H5l7 7 7-7zm-8 2V5h2v6h1.17L12 13.17 9.83 11H11zm-6 7h14v2H5z\"></path>\n  </svg>\n)\n\nexport default downloadIcon\n","const shareIosIcon = (\n  <svg width={20} focusable=\"false\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" data-testid=\"IosShareIcon\">\n    <path\n      fill=\"#3478F6\"\n      d=\"m16 5-1.42 1.42-1.59-1.59V16h-1.98V4.83L9.42 6.42 8 5l4-4 4 4zm4 5v11c0 1.1-.9 2-2 2H6c-1.11 0-2-.9-2-2V10c0-1.11.89-2 2-2h3v2H6v11h12V10h-3V8h3c1.1 0 2 .89 2 2z\"></path>\n  </svg>\n)\n\nexport default shareIosIcon\n","const addIosIcon = (\n  <svg width={\"20\"} focusable=\"false\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" data-testid=\"AddBoxOutlinedIcon\">\n    <path d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14zm-8-2h2v-4h4v-2h-4V7h-2v4H7v2h4z\"></path>\n  </svg>\n)\n\nexport default addIosIcon\n","import React, { forwardRef, useEffect, useState } from \"react\"\nimport MDBox from \"../../components/MDBox\"\nimport downloadIcon from \"../../icons/downloadIcon\"\nimport { Dialog, DialogActions, Slide, Tooltip } from \"@mui/material\"\nimport MDButton from \"../../components/MDButton\"\nimport MDTypography from \"../../components/MDTypography\"\nimport shareIosIcon from \"../../icons/shareIosIcon\"\nimport addIosIcon from \"../../icons/addIosIcon\"\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport const InstallButton = ({ tooltipText }) => {\n  const [openDownload, setOpenDownload] = useState(false)\n  const [deferredPrompt, setDeferredPrompt] = useState(null)\n  const [showInstallButton, setShowInstallButton] = useState(false)\n\n  useEffect(() => {\n    const handleBeforeInstall = e => {\n      e.preventDefault()\n      setShowInstallButton(true)\n      setDeferredPrompt(e)\n      //showInstallPromotion()\n    }\n\n    window.addEventListener(\"beforeinstallprompt\", handleBeforeInstall)\n\n    return () => {\n      window.removeEventListener(\"beforeinstallprompt\", handleBeforeInstall)\n    }\n  }, [])\n\n  const handleInstallClick = async () => {\n    hideInstallPromotion()\n    deferredPrompt.prompt()\n    const { outcome } = await deferredPrompt.userChoice\n    if (outcome) setShowInstallButton(false)\n    setDeferredPrompt(null)\n  }\n\n  function showInstallPromotion() {\n    setOpenDownload(true)\n  }\n\n  function hideInstallPromotion() {\n    setOpenDownload(false)\n  }\n  //when site will be responsive this will be only for ios\n  const isSafari =\n    navigator.vendor &&\n    navigator.vendor.indexOf(\"Apple\") > -1 &&\n    navigator.userAgent &&\n    navigator.userAgent.indexOf(\"CriOS\") === -1 &&\n    navigator.userAgent.indexOf(\"FxiOS\") === -1\n\n  return (\n    (showInstallButton || isSafari) && (\n      <MDBox className=\"installbutton\" px={2} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pb={3} pt={\"12px\"} bgColor=\"transparent\">\n        <Tooltip title={tooltipText} placement=\"top\">\n          <button\n            onClick={showInstallPromotion}\n            aria-label=\"download-app\"\n            style={{\n              color: \"#3c96ee\",\n              backgroundColor: \"transparent\",\n              borderRadius: \"50px\",\n              paddingTop: \"5px\",\n              paddingLeft: \"5px\",\n              paddingRight: \"5px\",\n              borderColor: \"#3c96ee\",\n              cursor: \"pointer\"\n            }}>\n            {downloadIcon}\n          </button>\n        </Tooltip>\n        <Dialog open={openDownload} TransitionComponent={Transition} keepMounted aria-describedby=\"alert-dialog-download\" maxWidth=\"sm\" fullWidth>\n          {isSafari ? (\n            <MDBox p={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\n              <MDTypography variant=\"h5\">Install the app for the best experience</MDTypography>\n              <MDTypography variant=\"body2\" sx={{ display: \"flex\", gap: 2, pt: 2, alignItems: \"center\" }}>\n                {shareIosIcon} Click on the share icon\n              </MDTypography>\n              <MDTypography variant=\"body2\" sx={{ display: \"flex\", gap: 2, alignItems: \"center\", pt: 0.5 }}>\n                {addIosIcon} Then select \"Add at your Home screen\"\n              </MDTypography>\n            </MDBox>\n          ) : (\n            <MDTypography variant=\"body2\" p={3} pb={1}>\n              You can install MyDigitalEstate on your device and use it as a native app. <br />\n              <br /> Would you like to install it?\n            </MDTypography>\n          )}\n\n          <DialogActions>\n            <MDButton onClick={hideInstallPromotion}>Cancel</MDButton>\n            {!isSafari && (\n              <MDButton color=\"info\" variant=\"gradient\" onClick={handleInstallClick}>\n                Install\n              </MDButton>\n            )}\n          </DialogActions>\n        </Dialog>\n      </MDBox>\n    )\n  )\n}\n","import { supabase } from \"../../supabaseClient\"\nimport { AccountDetails } from \"./AccountDetails.js\"\nimport { WalletsList } from \"./WalletsList\"\nimport Footer from \"../../components/Footer\"\nimport MDBox from \"../../components/MDBox\"\nimport LogoLoading from \"../../components/Suspense/CoverLoading/LogoLoading\"\nimport ErrorFallback from \"../../components/Suspense/ErrorBoundary/ErrorFallback\"\nimport { useQuery } from \"@supabase-cache-helpers/postgrest-swr\"\nimport { useLocation, useNavigate } from \"react-router\"\nimport { Box } from \"@mui/system\"\nimport GoBackBtn from \"../../components/GoBackBtn/GoBackBtn\"\nimport { Typography } from \"@mui/material\"\nimport { useAuth } from \"../../components/context\"\nimport IconSettings from \"../../icons/IconSettings\"\nimport { InstallButton } from \"../../examples/InstallApp/InstallButton\"\n\nfunction SettingsPage() {\n  const navigate = useNavigate()\n  const { pathname } = useLocation()\n  const user = useAuth()\n  const currentData = new Date().getFullYear()\n\n  const {\n    data: settings,\n    isLoading,\n    error,\n    mutate\n  } = useQuery(supabase.rpc(\"get_settings_page\"), {\n    revalidateIfStale: false,\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n    refreshInterval: 10000000\n  })\n\n  if (error) return <ErrorFallback error={error.message} />\n  if (isLoading) return <LogoLoading />\n\n  return (\n    <MDBox sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\", justifyContent: \"space-between\" }}>\n      <MDBox>\n        {settings && (\n          <>\n            <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n              <Box sx={{ display: \"flex\", alignItems: \"center\", width: \"100%\", pb: \"16px\", pt: \"16px\", mt: 0, transform: \"translate(-12px, 0px)\" }}>\n                {/* <GoBackBtn boxShadow=\"none\" onClick={() => pathname !== \"/\" + user?.user_metadata?.username && navigate(\"/\" + user?.user_metadata?.username)} /> */}\n                <GoBackBtn boxShadow=\"none\" onWhite=\"#344767\" />\n                {IconSettings}\n                <Typography variant=\"h5\" fontSize=\"1.5rem\" pl=\"8px\">\n                  Settings\n                </Typography>\n              </Box>\n              <InstallButton tooltipText={\"Download\"} />\n            </Box>\n            <AccountDetails updateSettingsDataFn={mutate} data={settings} />\n          </>\n        )}\n        {settings && <WalletsList updateFn={mutate} wallets={settings?.wallet_data} />}\n      </MDBox>\n      <MDBox pb={1.5} pt={3}>\n        <Footer developerName={\"Futuri Enterprise\"} data={currentData} opacity=\"none\" backgroundColor={\"transparent\"} termsColor=\"red\" />\n      </MDBox>\n    </MDBox>\n  )\n}\n\nexport default SettingsPage\n","'use client';\n\nimport PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["_ref","onClick","tooltipText","color","_jsx","Tooltip","title","placement","children","style","backgroundColor","border","fontSize","cursor","zIndex","width","height","fill","className","focusable","viewBox","d","Typography","component","variant","display","paddingRight","sx","createSvgIcon","Transition","forwardRef","props","ref","Slide","direction","WalletsList","wallets","updateFn","showToast","useToast","user","useAuth","openCancelConfirmation","setOpenCancelConfirmation","useNavigate","useState","addressInEditMode","setAddressInEditMode","walletName","setWalletName","_jsxs","Card","px","paddingBottom","opacity","MDBox","justifyContent","pr","CardHeader","avatar","AssuredWorkload","titleTypographyProps","fontWeight","AddIcon","transform","sort","a","b","address","toLowerCase","localeCompare","map","wallet","index","_Fragment","pl","pt","pb","TextField","value","onChange","event","target","type","size","padding","textAlign","borderRadius","fontFamily","placeholder","name","MDTypography","alignItems","lineHeight","textTransform","letterSpacing","shorten","verified","ErrorIcon","gap","EditIcon","prevWalletAddress","DeleteIcon","length","Divider","MDButton","p","async","_user$user_metadata","error","supabase","from","update","wallet_name","eq","user_metadata","username","concat","message","updateWalletName","verticalAlign","margin","Dialog","open","TransitionComponent","keepMounted","onClose","maxWidth","fullWidth","DialogActions","_user$user_metadata2","delete","shortAddressBegin","substring","shortAddressEnd","position","top","paddingTop","overflow","AccountDetails","data","updateSettingsDataFn","isEditingEnabled","setIsEditingEnabled","isUpdating","setIsUpdating","display_name","email","phone","email_change","confirmed_email","profile_public","password","profileInfoState","setProfileInfoState","displayName","phoneNumber","profileIsPublic","setProfileIsPublic","handleSaveClick","auth","updateUser","undefined","updateError","public_profile","console","log","Box","flexDirection","CardContent","personIcon","handleModifyClick","FormControl","onSubmit","id","required","prevState","CustomTooltip","editIconTooltip","disabled","Switch","checked","mt","React","Button","handleCancelClick","signOut","window","location","href","protocol","host","background","InstallButton","openDownload","setOpenDownload","deferredPrompt","setDeferredPrompt","showInstallButton","setShowInstallButton","useEffect","handleBeforeInstall","e","preventDefault","addEventListener","removeEventListener","hideInstallPromotion","isSafari","navigator","vendor","indexOf","userAgent","bgColor","paddingLeft","borderColor","downloadIcon","shareIosIcon","addIosIcon","prompt","outcome","userChoice","pathname","useLocation","currentData","Date","getFullYear","settings","isLoading","mutate","useQuery","rpc","revalidateIfStale","revalidateOnFocus","revalidateOnReconnect","refreshInterval","ErrorFallback","LogoLoading","GoBackBtn","boxShadow","onWhite","IconSettings","wallet_data","Footer","developerName","termsColor","createBox"],"sourceRoot":""}