{"version":3,"file":"static/js/900.aa447a22.chunk.js","mappings":"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","sources":["icons/EditIcon.js","icons/ErrorIcon.js","icons/autographIcon.js","pages/balance/components/DefaultInfoCard/AddWalletDialog.js","pages/balance/components/DefaultInfoCard/SelectAWallet.js","pages/balance/components/DefaultInfoCard/index.js","icons/accountBalanceIcon.js","icons/profitIcon.js","icons/groupIconTransaction.js","pages/balance/components/Transaction/index.js","pages/balance/components/Transactions/index.js","icons/myBalanceIcon.js","pages/balance/index.js","icons/AddIcon.js","icons/DeleteIcon.js","../node_modules/@mui/icons-material/esm/AssuredWorkload.js","pages/settings/WalletsList.js"],"sourcesContent":["import { Tooltip } from \"@mui/material\"\nimport React from \"react\"\n\nfunction EditIcon({ onClick, tooltipText, color }) {\n  return (\n    <Tooltip title={tooltipText} placement=\"top\">\n      <button\n        color={color}\n        onClick={onClick}\n        data-test-id=\"account-details-btn-edit-icon\"\n        style={{\n          backgroundColor: \"transparent\",\n          border: \"none\",\n          color: \"#344767\",\n          fontSize: \"16px\",\n          cursor: \"pointer\",\n          zIndex: 999\n        }}>\n        <svg\n          style={{ width: \"1rem\", height: \"1rem\", fill: \"currentColor\" }}\n          className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-eimhud-MuiSvgIcon-root\"\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          viewBox=\"0 0 24 24\"\n          data-testid=\"EditIcon\">\n          <path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"></path>\n        </svg>\n      </button>\n    </Tooltip>\n  )\n}\n\nexport default EditIcon\n","import { Tooltip, Typography } from \"@mui/material\"\nimport React from \"react\"\n\nfunction ErrorIcon({ tooltipText }) {\n  return (\n    <Tooltip title={tooltipText} placement=\"top\">\n      <Typography\n        component=\"span\"\n        variant=\"body2\"\n        style={{\n          display: \"inline-block\",\n          border: \"none\",\n          fontSize: \"16px\",\n          cursor: \"pointer\",\n          paddingRight: \"5px\"\n        }}>\n        <svg\n          width={\"15px\"}\n          className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-15p8kyl-MuiSvgIcon-root\"\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          viewBox=\"0 0 24 24\"\n          data-testid=\"ErrorIcon\"\n          aria-label=\"Not Verified\"\n          data-mui-internal-clone-element=\"true\">\n          <path fill={\"red\"} d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"></path>\n        </svg>\n      </Typography>\n    </Tooltip>\n  )\n}\n\nexport default ErrorIcon\n","const autographIcon = (\n  <svg\n    style={{ paddingBottom: \"8px\", fill: \"currentColor\" }}\n    className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-s5ued0-MuiSvgIcon-root\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    data-testid=\"AutoGraphIcon\">\n    <path d=\"M14.06 9.94 12 9l2.06-.94L15 6l.94 2.06L18 9l-2.06.94L15 12l-.94-2.06zM4 14l.94-2.06L7 11l-2.06-.94L4 8l-.94 2.06L1 11l2.06.94L4 14zm4.5-5 1.09-2.41L12 5.5 9.59 4.41 8.5 2 7.41 4.41 5 5.5l2.41 1.09L8.5 9zm-4 11.5 6-6.01 4 4L23 8.93l-1.41-1.41-7.09 7.97-4-4L3 19l1.5 1.5z\"></path>\n  </svg>\n)\n\nexport default autographIcon\n","import { Typography } from \"@mui/material\"\nimport React from \"react\"\nimport MDBox from \"../../../../components/MDBox\"\nimport { Link } from \"react-router-dom\"\n\nconst AddWalletDialog = () => {\n  return (\n    <>\n      <Typography\n        variant=\"body2\"\n        sx={{\n          display: \"flex\",\n          fontSize: \"1.05rem\",\n          lineHeight: 1.375,\n          fontWeight: 400,\n          letterSpacing: \"0em\",\n          opacity: 1,\n          textTransform: \"none\",\n          verticalAlign: \"unset\",\n          color: \"#7b809a\",\n          margin: 0,\n          fontFamily: '\"Roboto\", \"Helvetica\", sansSerif'\n        }}>\n        You haven't linked a wallet yet.\n      </Typography>\n      <MDBox display=\"flex\" sx={{ gap: \"4px\", paddingTop: \"4px\", alignItems: \"center\", justifyContent: \"start\" }}>\n        <Link to=\"/addwallet\">\n          <Typography\n            variant=\"body1\"\n            sx={{\n              display: \"flex\",\n              fontSize: \"1.05rem\",\n              lineHeight: 1.375,\n              fontWeight: 700,\n              letterSpacing: \"0em\",\n              opacity: 1,\n              textTransform: \"none\",\n              verticalAlign: \"unset\",\n              color: \"#3a94ee\",\n              margin: 0,\n              fontFamily: '\"Roboto\", \"Helvetica\", sansSerif'\n            }}>\n            Go here\n          </Typography>\n        </Link>\n        <Typography\n          variant=\"body2\"\n          sx={{\n            display: \"flex\",\n            fontSize: \"1.05rem\",\n            lineHeight: 1.375,\n            fontWeight: 500,\n            letterSpacing: \"0em\",\n            opacity: 1,\n            textTransform: \"none\",\n            verticalAlign: \"unset\",\n            color: \"#7b809a\",\n            margin: 0,\n            fontFamily: '\"Roboto\", \"Helvetica\", sansSerif'\n          }}>\n          to add a wallet.\n        </Typography>\n      </MDBox>\n    </>\n  )\n}\n\nexport default AddWalletDialog\n","import { Typography } from \"@mui/material\"\nimport React from \"react\"\n\nconst SelectAWallet = ({ selectWallet }) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      sx={{\n        fontFamily: '\"Roboto\",\"Helvetica\",\"Arial\",sans-serif',\n        fontSize: \"0.75rem\",\n        fontWeight: 300,\n        lineHeight: 1.25,\n        letterSpacing: \"0.03333em\",\n        textAlign: \"left\",\n        paddingTop: \"18px\",\n        marginRight: \"14px\",\n        color: \"#9e9e9e\",\n        marginBottom: 0,\n        paddingLeft: \"14px\"\n      }}>\n      {selectWallet}\n    </Typography>\n  )\n}\n\nexport default SelectAWallet\n","import PropTypes from \"prop-types\"\nimport Card from \"@mui/material/Card\"\nimport Divider from \"@mui/material/Divider\"\nimport Icon from \"@mui/material/Icon\"\nimport MDBox from \"../../../../components/MDBox\"\nimport MDTypography from \"../../../../components/MDTypography\"\nimport { Dialog, DialogActions, InputAdornment, Slide, TextField } from \"@mui/material\"\nimport MDButton from \"../../../../components/MDButton\"\nimport { forwardRef, useState, useEffect } from \"react\"\nimport QRCode from \"react-qr-code\"\nimport { supabase } from \"../../../../supabaseClient\"\nimport trackEvent, { useAuth } from \"../../../../components/context\"\nimport { useToast } from \"@dalgu/react-toast\"\nimport AddWalletDialog from \"./AddWalletDialog\"\nimport SelectAWallet from \"./SelectAWallet\"\nimport CustomTooltip from \"./CustomTooltip\"\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nfunction DefaultInfoCard({ color, icon, title, description, value }) {\n  const { showToast } = useToast()\n  const [wallets, setWallets] = useState([])\n  const [wallet, setWallet] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n\n  const isWithdrawEmpty = true\n  const isDepositEmpty = true\n\n  const handleChange = event => {\n    setWallet(event.target.value)\n  }\n  const user = useAuth()\n  const [openWithdraw, setOpenWithdraw] = useState(false)\n\n  const handleClickOpenWithdraw = () => {\n    setOpenWithdraw(true)\n    trackEvent(\"OpenWithdrawDialog\")\n  }\n\n  const handleCloseWithdraw = () => {\n    setOpenWithdraw(false)\n  }\n  const [openDeposit, setOpenDeposit] = useState(false)\n\n  const handleClickOpenDeposit = () => {\n    setOpenDeposit(true)\n    trackEvent(\"OpenDepositDialog\")\n  }\n\n  const handleCloseDeposit = () => {\n    setOpenDeposit(false)\n    setWallet(\"\")\n  }\n\n  // const { data, error } = useQuery(supabase.from(\"wallets\").select(\"wallet_name\").eq(\"owned_by\", user?.user_metadata?.username), { refreshInterval: 10000000 })\n\n  useEffect(() => {\n    const fetchWallets = async () => {\n      const { data, error } = await supabase.from(\"wallets\").select(\"wallet_name\").eq(\"owned_by\", user?.user_metadata?.username) // Assuming you have an `authUser` object with the authenticated user's information\n\n      if (error) {\n        showToast(error.message)\n        return\n      }\n\n      setWallets(\n        data.map(wallet => ({\n          value: wallet.wallet_name,\n          label: wallet.wallet_name\n        }))\n      )\n    }\n\n    fetchWallets()\n  }, [])\n\n  const widthdraw = async () => {\n    const { error } = await supabase.rpc(\"create_widthdraw_transaction\", {\n      new_destination: wallet,\n      new_amount: parseFloat(amount),\n      new_status: \"pending\"\n    })\n    if (error) {\n      showToast(error.message)\n    }\n    setOpenWithdraw(false)\n    setAmount(\"\")\n    setWallet(\"\")\n    showToast(\"Withdrawal successful\")\n    //Klarida why is a reload needed here?\n    window.location.reload()\n  }\n  const firstElement = value.split(\" \")[0]\n  const balanceValue = parseFloat(firstElement)\n  const isButtonDisabled = amount <= 0 || amount > balanceValue || balanceValue === 0 || wallets?.length === 0\n\n  return (\n    <Card>\n      <MDBox pt={2} pb={1.5} mx={3} display=\"flex\" justifyContent=\"center\">\n        <MDBox\n          display=\"grid\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          bgColor={color}\n          color=\"white\"\n          width=\"4rem\"\n          height=\"4rem\"\n          shadow=\"md\"\n          overflow=\"visible\"\n          borderRadius=\"lg\"\n          variant=\"gradient\">\n          <Icon fontSize=\"default\" overflow=\"visible\">\n            {icon}\n          </Icon>\n        </MDBox>\n      </MDBox>\n      <MDBox pb={1.5} pt={0.5} px={2} textAlign=\"center\" lineHeight={1.25}>\n        <MDTypography variant=\"body2\" sx={{ fontSize: \"1.25rem\", opacity: 1, fontWeight: 600 }} fontWeight=\"medium\" textTransform=\"capitalize\">\n          {title}\n        </MDTypography>\n        {description && (\n          <MDTypography variant=\"caption\" color=\"text\" fontWeight=\"regular\">\n            {description}\n          </MDTypography>\n        )}\n        {description && !value ? null : <Divider />}\n        {value && (\n          <MDTypography variant=\"h6\" sx={{ fontSize: \"1.25rem\", lineHeight: \"1.375\", letterSpacing: \"0em\", opacity: 1 }} fontWeight=\"medium\" color={color}>\n            {value}\n          </MDTypography>\n        )}\n      </MDBox>\n      <MDBox px={2} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pb={1.2}>\n        <CustomTooltip title=\"Real money blocked for Alpha testing\" disabled={isWithdrawEmpty}>\n          <MDButton disabled={isWithdrawEmpty} onClick={handleClickOpenWithdraw} variant=\"gradient\" color=\"info\" size=\"medium\" sx={{ width: \"100%\", p: 1 }}>\n            <MDTypography fontSize={15} color={\"white\"} variant=\"h5\" fontWeight=\"bold\">\n              Withdraw\n            </MDTypography>\n          </MDButton>\n        </CustomTooltip>\n        <CustomTooltip title=\"Real money blocked for Alpha testing\" disabled={isDepositEmpty}>\n          <MDButton\n            disabled={isDepositEmpty}\n            onClick={handleClickOpenDeposit}\n            variant=\"gradient\"\n            color=\"info\"\n            size=\"medium\"\n            sx={{\n              my: 1,\n              // width: \"49%\",\n              p: 1,\n              width: \"100%\"\n            }}>\n            <MDTypography fontSize={15} color={\"white\"} px={1.1} variant=\"h5\" fontWeight=\"bold\">\n              Deposit\n            </MDTypography>\n          </MDButton>\n        </CustomTooltip>\n        <Dialog\n          sx={{\n            \"& .MuiDialog-paper\": {\n              width: \"100%\",\n              margin: 3\n            }\n          }}\n          open={openWithdraw}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={handleCloseWithdraw}\n          aria-describedby=\"alert-dialog-slide-description\"\n          maxWidth=\"sm\"\n          fullWidth>\n          <MDBox p={3}>\n            {wallets?.length === 0 ? (\n              <AddWalletDialog />\n            ) : (\n              <>\n                <TextField\n                  type=\"number\"\n                  placeholder=\"0\"\n                  sx={{ width: \"100%\", minWidth: \"80px\" }}\n                  disabled={wallets?.length === 0}\n                  label=\"Amount\"\n                  variant=\"outlined\"\n                  name=\"amount\"\n                  value={amount}\n                  onChange={e => setAmount(e.target.value)}\n                  InputProps={{\n                    type: \"number\",\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <MDTypography fontSize={11} fontWeight=\"medium\" color={color}>\n                          USDT\n                        </MDTypography>\n                      </InputAdornment>\n                    )\n                  }}\n                />\n                <br />\n                <br />\n                <TextField\n                  SelectProps={{\n                    native: true\n                  }}\n                  select\n                  sx={{ width: \"100%\", minWidth: \"80px\" }}\n                  disabled={wallets?.length === 0}\n                  id=\"wallet\"\n                  label=\"To\"\n                  variant=\"outlined\"\n                  value={wallet}\n                  name=\"wallet\"\n                  onChange={e => setWallet(e.target.value)}>\n                  <option aria-label=\"None\" value=\"\" />\n                  {wallets.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </TextField>\n                {wallets?.length > 0 && <SelectAWallet selectWallet=\"Please select one of your crypto wallets.\" />}\n              </>\n            )}{\" \"}\n          </MDBox>\n          <DialogActions>\n            <MDButton onClick={handleCloseWithdraw}>Cancel</MDButton>\n            <MDButton color=\"info\" variant=\"gradient\" onClick={widthdraw} disabled={isButtonDisabled}>\n              Widthdraw\n            </MDButton>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          sx={{\n            \"& .MuiDialog-paper\": {\n              width: \"100%\",\n              margin: 3\n            }\n          }}\n          open={openDeposit}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={handleCloseDeposit}\n          aria-describedby=\"alert-dialog-slide-description\"\n          maxWidth=\"sm\"\n          fullWidth>\n          <MDBox p={3}>\n            {wallets?.length === 0 ? (\n              <AddWalletDialog />\n            ) : (\n              <>\n                <TextField\n                  SelectProps={{\n                    native: true\n                  }}\n                  select\n                  sx={{ width: \"100%\", minWidth: \"80px\" }}\n                  id=\"outlined-basic\"\n                  label=\"From\"\n                  variant=\"outlined\"\n                  value={wallet}\n                  onChange={handleChange}\n                  // helperText={wallets?.length === 0 ? \"Please add a wallet to your account\" : \"Please select one of your crypto wallets\"}\n                  disabled={wallets?.length === 0}>\n                  <option aria-label=\"None\" value=\"\" />\n                  {wallets.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </TextField>\n                {wallets?.length > 0 && <SelectAWallet selectWallet=\"Please select one of your crypto wallets.\" />}\n                {wallet && (\n                  <>\n                    <MDBox display=\"flex\" justifyContent=\"center\" mt={2}>\n                      <QRCode value={wallet} />\n                    </MDBox>\n                    <MDBox display=\"flex\" justifyContent=\"center\" mt={2}>\n                      <MDTypography fontSize={14} color=\"text\">\n                        he24820342049fye0o03032\n                      </MDTypography>\n                    </MDBox>\n                    <MDBox display=\"flex\" justifyContent=\"center\" mt={2}>\n                      <MDTypography fontSize={14} color=\"dark\">\n                        Minimium deposit:\n                      </MDTypography>\n                      <MDTypography ml={0.5} fontSize={14} color=\"info\">\n                        {\" \"}\n                        <b>100 USDT</b>\n                      </MDTypography>\n                    </MDBox>\n                    <MDBox display=\"flex\" justifyContent=\"center\" mt={2}>\n                      <MDTypography fontSize={10} color=\"dark\">\n                        If you have any question please contact your sponsor or the support.\n                      </MDTypography>\n                    </MDBox>\n                  </>\n                )}\n              </>\n            )}\n          </MDBox>\n\n          <DialogActions>\n            <MDButton onClick={handleCloseDeposit}>Cancel</MDButton>\n            <MDButton disabled={!wallet} color=\"info\" variant=\"gradient\" onClick={handleCloseDeposit}>\n              Copy Address\n            </MDButton>\n          </DialogActions>\n        </Dialog>\n      </MDBox>\n    </Card>\n  )\n}\n\n// Setting default values for the props of DefaultInfoCard\nDefaultInfoCard.defaultProps = {\n  color: \"info\",\n  value: \"\",\n  description: \"\"\n}\n\n// Typechecking props for the DefaultInfoCard\nDefaultInfoCard.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport default DefaultInfoCard\n","const accountBalanceIcon = (\n  <svg\n    style={{ fill: \"currentColor\", lineHeight: 1, paddingBottom: \"8px\" }}\n    className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeSmall css-1xwgyfb-MuiSvgIcon-root\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    data-testid=\"AccountBalanceIcon\">\n    <path d=\"M4 10h3v7H4zm6.5 0h3v7h-3zM2 19h20v3H2zm15-9h3v7h-3zm-5-9L2 6v2h20V6z\"></path>\n  </svg>\n)\n\nexport default accountBalanceIcon\n","const profitIcon = (\n  <svg viewBox=\"0 50 672 702\" style={{ paddingBottom: \"5px\" }}>\n    <path\n      fill=\"#fff\"\n      d=\"M96.337 515.359c6.045-36.57 19.978-69.802 37.918-101.378 33.315-58.637 75.669-109.943 127.324-153.35 11.05-9.286 23.16-17.393 35.255-25.319 5.427-3.556 12.024-5.327 18.09-7.908l.95 1.203-24.702 44.135.856.78c1.35-1.413 2.867-2.7 4.023-4.256 9.93-13.371 19.715-26.85 29.771-40.123 1.306-1.724 3.792-3.254 5.915-3.548 19.031-2.636 19.726-2.17 27.83 15.21 5.904 12.66 11.81 25.319 17.743 37.964.185.394.687.639 2.376.626l-11.415-52.873c6.812 2.63 12.823 4.343 18.264 7.157 23.471 12.14 43.399 29.09 62.16 47.392 44.578 43.487 81.84 92.5 109.887 148.234 15.428 30.658 27.18 62.609 30.881 97.03 2.713 25.233.87 49.992-9.656 73.446-15.088 33.616-39.722 54.42-77.173 60.589-40.062 6.598-80.277 10.213-120.759 11.577-54.199 1.825-108.32.403-162.176-6.181-17.465-2.136-34.7-6.189-52.012-9.514-21.877-4.202-37-18.052-49.66-35.26-19.494-26.5-25.815-56.545-23.588-88.815.379-5.478 1.205-10.924 1.898-16.818m302.68-59.912c-12.412-9.061-27.165-12.317-41.494-16.538-3.317-.978-4.395-2.32-4.359-5.81.193-18.493.086-36.988.108-55.482.001-1.239.213-2.477.37-4.18 10.717 3.48 18.151 9.805 22.29 19.794 1.462 3.526 2.425 7.264 3.965 10.75 3.917 8.867 12.678 13.066 22.234 10.88 8.983-2.054 15.526-10.588 14.585-20.004-.455-4.555-1.61-9.277-3.55-13.406-8.418-17.92-21.607-30.597-41.28-35.521-6.093-1.525-12.273-2.704-18.846-4.135 0-6.557.34-13.065-.093-19.522-.453-6.748-4.783-9.983-11.123-9.125-4.607.623-7.525 3.727-7.845 9.48-.357 6.429-.082 12.892-.082 19.006-8.364 1.917-16.137 3.081-23.499 5.498-23.984 7.873-38.929 24.041-41.959 49.496-3.348 28.135 5.389 51.739 35.166 64.813 8.204 3.602 16.704 6.621 25.263 9.276 3.689 1.143 4.942 2.507 4.903 6.401-.205 20.492-.091 40.986-.105 61.48-.001 1.608-.134 3.215-.226 5.294-12.713-3.207-21.39-10.527-26.413-22.01-2.596-5.933-4.535-12.152-6.805-18.23-3.365-9.012-11.113-13.203-21.678-11.764-8.783 1.197-16.102 8.72-16.614 17.413-.185 3.133-.033 6.364.528 9.45 3.558 19.595 14.914 33.788 31.3 44.336 11.992 7.719 25.436 11.286 39.917 13.227 0 1.941-.017 3.736.003 5.53.082 7.661-.086 15.337.345 22.978.369 6.532 3.446 9.276 9.338 9.389 6.066.116 8.72-2.214 9.387-9.148.508-5.291.404-10.645.49-15.972.07-4.286.014-8.575.014-12.12 9.367-2.464 18.327-3.955 26.623-7.165 23.85-9.228 38.971-26.462 43.182-51.929 4.12-24.928-2.955-46.128-24.04-62.43z\"\n    />\n    <path\n      fill=\"#fff\"\n      d=\"M295.934 213c-1.757.996-3.167 1.823-4.946 2.867-8.817-10.368-17.543-20.605-26.243-30.865-13.248-15.624-26.433-31.303-39.73-46.885-9.541-11.18-10.33-19.5-1.91-31.519 9.286-13.258 22.189-21.796 37.324-27.204 2.863-1.023 3.728.37 4.824 2.554 8.199 16.334 16.506 32.613 25.977 48.711-.319-2.204-.368-4.488-.997-6.599-6.609-22.158-13.2-44.322-20.088-66.394-1.216-3.894-.249-6.164 2.665-8.488 10.623-8.472 23.115-12.35 36.175-14.627 36.838-6.422 73.293-5.164 109.014 6.565 5.604 1.84 10.682 5.285 15.996 8.002 2.381 1.218 2.624 2.866 1.577 5.332-8.508 20.042-16.894 40.135-25.91 61.628 5.386-3.153 7.248-7.866 10.231-11.414 3.103-3.69 5.829-7.696 8.722-11.563 2.976-3.977 5.954-7.952 9.1-12.153 10.624 6.271 19.596 13.838 24.904 24.836 6.007 12.446 3.737 23.96-5.212 34.277-17.46 20.129-34.944 40.238-52.415 60.358-3.821 4.402-7.704 8.753-11.402 13.256-1.663 2.025-3.077 2.806-5.874 1.796-6.384-2.306-12.962-4.078-19.736-6.152l14.91-36.795-1.906-.928c-.935 1.23-1.92 2.426-2.798 3.696-6.728 9.717-13.541 19.379-20.079 29.223-1.824 2.746-3.705 3.563-6.947 3.199-13.426-1.508-26.922-2.673-40.288.223-4.983 1.08-9.734 3.231-14.938 5.063z\"\n    />\n    <path\n      fill=\"#fff\"\n      d=\"M353.231 482.468c.065-1.577.13-2.711.196-3.857 19.137 2.343 32.828 16.276 32.614 33.02-.217 17.105-14.478 31.922-32.809 33.486v-62.65z\"\n    />\n    <path fill=\"#fff\" d=\"M306.067 403.816c-.701-14.583 5.463-25.253 27.343-30.646v58.03c-15.776-2.92-26.077-13.156-27.343-27.384z\" />\n  </svg>\n)\n\nexport default profitIcon\n","const groupIconTransaction = (\n  <svg\n    width={\"20px\"}\n    style={{ fill: \"currentColor\", paddingBottom: \"8px\" }}\n    className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-eimhud-MuiSvgIcon-root\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    data-testid=\"GroupIcon\">\n    <path d=\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"></path>\n  </svg>\n)\n\nexport default groupIconTransaction\n","import PropTypes from \"prop-types\"\nimport Icon from \"@mui/material/Icon\"\nimport MDBox from \"../../../../components/MDBox\"\nimport MDTypography from \"../../../../components/MDTypography\"\nimport accountBalanceIcon from \"../../../../icons/accountBalanceIcon\"\nimport autographIcon from \"../../../../icons/autographIcon\"\nimport profitIcon from \"../../../../icons/profitIcon\"\nimport groupIconTransaction from \"../../../../icons/groupIconTransaction\"\n\nconst lib = {\n  investment: {\n    color: \"info\",\n    icon: autographIcon\n  },\n  profit: {\n    color: \"success\",\n    icon: profitIcon\n  },\n  network: {\n    color: \"warning\",\n    icon: groupIconTransaction\n  },\n  balance: {\n    color: \"info\",\n    icon: accountBalanceIcon\n  }\n}\n\nfunction Transaction({ color, icon = \"investments\", name, description, value }) {\n  if (lib[icon]) {\n    return (\n      <MDBox key={name} component=\"li\" py={1} pr={0} mb={1}>\n        <MDBox color={color} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <MDBox display=\"flex\" alignItems=\"center\">\n            <MDBox pr={1.5}>\n              <MDBox\n                variant=\"gradient\"\n                bgColor={lib[icon].color}\n                color={\"white\"}\n                coloredShadow={lib[icon].color}\n                borderRadius=\"7px\"\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                paddingBottom=\"5px\"\n                width=\"2.5rem\"\n                height=\"2.5rem\">\n                <Icon sx={{ fontSize: \"1.9rem !important\", marginTop: \"14px\", display: \"flex\", justifyContent: \"center\" }} color=\"inherit\">\n                  {lib[icon].icon}\n                </Icon>\n              </MDBox>\n            </MDBox>\n            <MDBox display=\"flex\" flexDirection=\"column\">\n              <MDTypography variant=\"button\" fontWeight=\"medium\" gutterBottom fontSize={\"0.57em\"}>\n                {name}\n              </MDTypography>\n              <MDTypography fontSize={\"0.495em\"} variant=\"caption\" color=\"text\" fontWeight=\"regular\">\n                {description}\n              </MDTypography>\n            </MDBox>\n          </MDBox>\n          <MDTypography variant=\"button\" color={color} fontWeight=\"medium\" fontSize={\"0.5em\"}>\n            {value}{\" \"}\n            <MDTypography variant=\"button\" color={color} fontWeight=\"medium\" fontSize={\"0.72em\"}>\n              USDT\n            </MDTypography>\n          </MDTypography>\n        </MDBox>\n      </MDBox>\n    )\n  }\n}\n// Typechecking props of the Transaction\nTransaction.propTypes = {\n  color: PropTypes.string.isRequired,\n  icon: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired\n}\n\nexport default Transaction\n","import { Dialog, DialogActions, Slide, TextField, Typography } from \"@mui/material\"\nimport Card from \"@mui/material/Card\"\nimport MDBox from \"../../../../components/MDBox\"\nimport MDButton from \"../../../../components/MDButton\"\nimport MDTypography from \"../../../../components/MDTypography\"\nimport Transaction from \"../../../../pages/balance/components/Transaction\"\nimport { useState } from \"react\"\nimport { Calendar } from \"react-calendar\"\nimport React from \"react\"\nimport SearchIcon from \"../../../../icons/SearchIcon\"\nimport tuneIcon from \"../../../../icons/tuneIcon\"\nimport { Link } from \"react-router-dom\"\nimport trackEvent from \"../../../../components/context\"\nimport { useOffsetInfiniteScrollQuery } from \"@supabase-cache-helpers/postgrest-swr\"\nimport { supabase } from \"../../../../supabaseClient\"\n\nfunction formatTimestamp(timestamp) {\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true\n  }\n\n  return new Intl.DateTimeFormat(\"en-US\", options).format(new Date(timestamp))\n}\nfunction Transactions(props) {\n  const [isOpen, setIsOpen] = useState(false)\n  const switchSearch = () => {\n    return\n    setIsOpen(!isOpen)\n  }\n  const [open, setOpen] = useState(false)\n\n  const handleClickOpen = () => {\n    return\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  // const [filteredTransactions, setFilteredTransactions] = useState([])\n  const [searchText, setSearchText] = useState(\"\")\n  const [selectedDateRange, setSelectedDateRange] = useState(null)\n  // const [isFilterApplied, setIsFilterApplied] = useState(false)\n\n  // const handleSearch = () => {\n  //   const filteredTransactions = transactions?.filter(transaction => {\n  //     const includesSearchText = transaction.title.toLowerCase().includes(searchText.toLowerCase())\n  //     const isInRange =\n  //       selectedDateRange === null || (new Date(transaction.timestampts) >= selectedDateRange[0] && new Date(transaction.timestampts) <= selectedDateRange[1])\n  //     return includesSearchText && isInRange\n  //   })\n\n  //   setFilteredTransactions(filteredTransactions)\n  //   setIsFilterApplied(true)\n  //   handleClose()\n  // }\n\n  // const {\n  //   data: transactions,\n  //   error: transactionsError,\n  //   isLoading: transactionsLoading,\n  //   loadMore\n  // } = useOffsetInfiniteScrollQuery(\n  //   supabase.rpc(\"get_transactions\"),\n  //   // {\n  //   //   revalidateOnFocus: false,\n  //   //   revalidateOnReconnect: false\n  //   // }\n  //   {\n  //     refreshInterval: 1000000\n  //   }\n  // )\n  // const fourthElementRef = useRef(null)\n  // const [isIntersecting, setIntersecting] = useState(false)\n  // useEffect(() => {\n  //   if (transactions && loadMore) {\n  //     const observer = new IntersectionObserver(entries => {\n  //       entries.forEach(entry => {\n  //         setIntersecting(prevValue => {\n  //           console.log(entry)\n  //           if (prevValue === false && entry.isIntersecting) {\n  //             loadMore()\n  //             console.log(loadMore())\n  //             // setIsAnimated(true)\n  //           }\n  //           return entry.isIntersecting\n  //         })\n  //         console.log(entry.isIntersecting)\n  //       })\n  //     })\n  //     if (fourthElementRef.current) observer.observe(fourthElementRef.current.querySelector(\"ul li:last-child\"))\n  //     return () => {\n  //       observer.disconnect()\n  //       console.log(\"Observer disconnect\", observer.disconnect())\n  //     }\n  //   }\n  // }, [transactions, fourthElementRef])\n\n  return (\n    <Card sx={{ height: \"100%\" }}>\n      <MDBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pt={2.5} px={2}>\n        <MDTypography variant=\"h6\" pb={0.5} sx={{ fontSize: \"18px\" }}>\n          My Transactions\n        </MDTypography>\n        <MDBox sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", gap: \"5px\" }}>\n          {/* <button onClick={switchSearch} style={{ border: \"none\", backgroundColor: \"transparent\", fontSize: \"20px\", color: \"rgb(52, 71, 103)\" }}>\n            <Search sx={{ mr: 1 }} />\n          </button> */}\n          <SearchIcon onClick={switchSearch} />\n          <button\n            onClick={handleClickOpen}\n            style={{ border: \"none\", backgroundColor: \"transparent\", cursor: \"pointer\", fontSize: \"20px\", color: \"rgb(52, 71, 103)\" }}>\n            {tuneIcon}\n          </button>\n        </MDBox>\n      </MDBox>\n      <MDBox pt={1.5} pb={2} px={1.5}>\n        {isOpen ? (\n          <TextField\n            sx={{ width: \"100%\", minWidth: \"80px\", pb: 1 }}\n            id=\"outlined-basic\"\n            label=\"Search...\"\n            variant=\"outlined\"\n            value={searchText}\n            onChange={e => setSearchText(e.target.value)}\n            onKeyPress={e => {\n              if (e.key === \"Enter\") {\n                // handleSearch()\n              }\n            }}\n          />\n        ) : null}\n        <>\n          {props?.transactions &&\n            [\"TODAY\", \"YESTERDAY\", \"THIS WEEK\", \"THIS MONTH\", \"OLDER\"].map(timeframe => {\n              const filtered = props?.transactions.filter(transaction => transaction.transaction_timeframe === timeframe)\n\n              const renderedTransactions =\n                filtered?.length > 0 ? (\n                  <MDBox\n                    component=\"ul\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    p={0}\n                    pt={0.9}\n                    m={0}\n                    sx={{ listStyle: \"none\" }}\n                    fourthElementRef={props.fourthElementRef}>\n                    {filtered.map(transaction => (\n                      <Transaction\n                        key={transaction.id}\n                        color={transaction.amount_color}\n                        icon={transaction.icon}\n                        name={transaction.title}\n                        description={\n                          transaction.title === \" Money Withdraw \" ? \"Pending\" : transaction.timestampts ? formatTimestamp(transaction.timestampts) : \"\"\n                        }\n                        value={transaction.amount}\n                      />\n                    ))}\n                  </MDBox>\n                ) : null\n\n              return (\n                renderedTransactions && (\n                  <React.Fragment key={timeframe}>\n                    <MDBox pb={0}>\n                      <MDTypography\n                        variant=\"caption\"\n                        fontWeight=\"bold\"\n                        textTransform=\"uppercase\"\n                        fontSize=\"11px\"\n                        sx={{\n                          color: \"#7b809a\",\n                          fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n                          fontSize: \"0.75rem\",\n                          lineHeight: 1.25,\n                          letterSpacing: \"0.03333em\",\n                          opacity: 1,\n                          fontWeight: 700\n                        }}>\n                        {timeframe === \"TODAY\" && \"Today\"}\n                        {timeframe === \"YESTERDAY\" && \"Yesterday\"}\n                        {timeframe === \"THIS WEEK\" && \"This Week\"}\n                        {timeframe === \"THIS MONTH\" && \"This Month\"}\n                        {timeframe === \"OLDER\" && \"Older\"}\n                      </MDTypography>\n                    </MDBox>\n                    {renderedTransactions}\n                  </React.Fragment>\n                )\n              )\n            })}\n          {props?.isLoading && (\n            <Typography\n              variant=\"body1\"\n              sx={{\n                fontSize: \"1rem\",\n                lineHeight: 1.375,\n                fontWeight: 500,\n                letterSpacing: \"0em\",\n                paddingLeft: \"4px\",\n                opacity: 1,\n                textTransform: \"none\",\n                verticalAlign: \"unset\",\n                color: \"#7b809a\",\n                margin: 0,\n                fontFamily: '\"Roboto\", \"Helvetica\", sansSerif',\n                display: \"flex\",\n                alignItems: \"center\"\n              }}>\n              Skeleton...\n            </Typography>\n          )}\n          {props?.transactions?.length === 0 && (\n            <Typography\n              variant=\"body1\"\n              sx={{\n                fontSize: \"1rem\",\n                lineHeight: 1.375,\n                fontWeight: 400,\n                letterSpacing: \"0em\",\n                paddingLeft: \"4px\",\n                opacity: 1,\n                textTransform: \"none\",\n                verticalAlign: \"unset\",\n                color: \"#7b809a\",\n                margin: 0,\n                fontFamily: '\"Roboto\", \"Helvetica\", sansSerif'\n              }}>\n              Make your first transactions in the\n              <Link\n                style={{ color: \"#3a94ee\" }}\n                to=\"/market\"\n                onClick={() => {\n                  trackEvent(\"GoToMarket\")\n                }}>\n                {\" \"}\n                market\n              </Link>\n            </Typography>\n          )}\n          <Dialog\n            open={open}\n            // TransitionComponent={Transition}\n            keepMounted\n            onClose={handleClose}\n            aria-describedby=\"alert-dialog-slide-description\"\n            maxWidth=\"sm\"\n            fullWidth>\n            <Calendar selectRange onChange={newDateRange => setSelectedDateRange(newDateRange)} />{\" \"}\n            <DialogActions>\n              <MDButton onClick={handleClose}>Cancel</MDButton>\n              {/* <MDButton color=\"info\" variant=\"gradient\" onClick={handleSearch}> */}\n              <MDButton color=\"info\" variant=\"gradient\">\n                Filter\n              </MDButton>\n            </DialogActions>\n          </Dialog>\n        </>\n      </MDBox>\n    </Card>\n  )\n}\nexport default Transactions\n","const myBalanceIcon = (\n  <svg\n    focusable=\"false\"\n    style={{ overflow: \"visible\", paddingBottom: \"12px\", paddingRight: \"12px\", fill: \"currentColor\", width: \"34px\", height: \"34px\", zIndex: 1 }}\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    data-testid=\"AccountBalanceIcon\">\n    <path d=\"M4 10h3v7H4zm6.5 0h3v7h-3zM2 19h20v3H2zm15-9h3v7h-3zm-5-9L2 6v2h20V6z\"></path>\n  </svg>\n)\n\nexport default myBalanceIcon\n","import Grid from \"@mui/material/Grid\"\nimport MDBox from \"../../components/MDBox\"\nimport DefaultInfoCard from \"./components/DefaultInfoCard\"\nimport Transactions from \"../../pages/balance/components/Transactions\"\nimport { supabase } from \"../../supabaseClient\"\nimport { useOffsetInfiniteScrollQuery, useQuery } from \"@supabase-cache-helpers/postgrest-swr\"\nimport myBalanceIcon from \"../../icons/myBalanceIcon\"\nimport LogoLoading from \"../../components/Suspense/CoverLoading/LogoLoading\"\nimport ErrorFallback from \"../../components/Suspense/ErrorBoundary/ErrorFallback\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { WalletsList } from \"../settings/WalletsList\"\n\nfunction BalancePage() {\n  const fifthElementRef = useRef(null)\n\n  const {\n    data: transactions,\n    error: transactionsError,\n    isLoading: transactionsLoading,\n    loadMore\n  } = useOffsetInfiniteScrollQuery(supabase.rpc(\"get_transactions\"), {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  })\n  //this should get_balance not get_balance_page\n  const {\n    data: balance_page,\n    error: balanceError,\n    isLoading: balanceLoading,\n    mutate\n  } = useQuery(supabase.rpc(\"get_balance_page\"), {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  })\n\n  const [isIntersecting, setIntersecting] = useState(false)\n  useEffect(() => {\n    if (transactions && loadMore) {\n      const fifthElementToObserve = fifthElementRef.current?.querySelector(\":nth-last-child(5)\")\n      if (fifthElementToObserve) {\n        const observer = new IntersectionObserver(entries => {\n          entries.forEach(entry => {\n            setIntersecting(prevValue => {\n              if (prevValue === false && entry.isIntersecting) {\n                loadMore()\n              }\n              return entry.isIntersecting\n            })\n          })\n        })\n        observer.observe(fifthElementToObserve)\n        return () => {\n          observer.disconnect()\n        }\n      }\n    }\n  }, [transactions, fifthElementRef])\n\n  if (balanceError || transactionsError) return <ErrorFallback />\n  if (balanceLoading || transactionsLoading) return <LogoLoading />\n  return (\n    <MDBox pt={1} mb={3} pb={\"10vh\"}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} xl={3}>\n          <DefaultInfoCard\n            color=\"info\"\n            icon={myBalanceIcon}\n            title=\"my balance\"\n            value={balance_page ? balance_page.balance.toLocaleString(\"en-US\") + \" USDT\" : \"skeleton\"}\n          />\n        </Grid>\n      </Grid>\n      <Grid\n        ref={fifthElementRef}\n        item\n        xs={12}\n        md={5}\n        pt={3}\n        // pb={8} It is temporarily commented since the Wallet list at the moment is the last component\n      >\n        <Transactions transactions={transactions} />\n      </Grid>\n      {balance_page?.wallet_data && (\n        <MDBox\n          sx={{\n            width: \"100%\",\n            pt: 3,\n            pb: 9\n            // pb It is temporarily commented since the Wallet list at the moment is the last component\n          }}>\n          <WalletsList updateFn={mutate} wallets={balance_page?.wallet_data} />\n        </MDBox>\n      )}\n    </MDBox>\n  )\n}\nexport default BalancePage\n","import { Tooltip } from \"@mui/material\"\nimport React from \"react\"\n\nfunction AddIcon({ onClick, tooltipText, sx }) {\n  return (\n    <Tooltip title={tooltipText} placement=\"top\">\n      <button\n        onClick={onClick}\n        style={{\n          backgroundColor: \"transparent\",\n          border: \"none\",\n          color: \"#344767\",\n          fontSize: \"16px\",\n          cursor: \"pointer\",\n          ...sx\n        }}>\n        <svg\n          style={{ width: \"1rem\", height: \"1rem\", fill: \"currentColor\" }}\n          className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-eimhud-MuiSvgIcon-root\"\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          viewBox=\"0 0 24 24\"\n          data-testid=\"AddIcon\">\n          <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n        </svg>\n      </button>\n    </Tooltip>\n  )\n}\n\nexport default AddIcon\n","import { Tooltip } from \"@mui/material\"\nimport React from \"react\"\n\nfunction DeleteIcon({ onClick, tooltipText }) {\n  return (\n    <Tooltip title={tooltipText} placement=\"top\">\n      <button\n        onClick={onClick}\n        style={{\n          backgroundColor: \"transparent\",\n          border: \"none\",\n          color: \"#344767\",\n          fontSize: \"16px\",\n          cursor: \"pointer\"\n        }}>\n        <svg\n          style={{ width: \"1rem\", height: \"1rem\", fill: \"currentColor\" }}\n          className=\"MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-eimhud-MuiSvgIcon-root\"\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          viewBox=\"0 0 24 24\"\n          data-testid=\"DeleteIcon\">\n          <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"></path>\n        </svg>\n      </button>\n    </Tooltip>\n  )\n}\n\nexport default DeleteIcon\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 10h2v7H5zm6 0h2v7h-2zm11-4L12 1 2 6v2h20zM2 19v2h12.4c-.21-.64-.32-1.31-.36-2H2zm17-6.74V10h-2v3.26zM20 14l-4 2v2.55c0 2.52 1.71 4.88 4 5.45 2.29-.57 4-2.93 4-5.45V16l-4-2zm-.72 7-2.03-2.03 1.06-1.06.97.97 2.41-2.38 1.06 1.06L19.28 21z\"\n}), 'AssuredWorkload');","import React, { forwardRef, useState } from \"react\"\nimport MDBox from \"../../components/MDBox\"\nimport { Card, CardHeader, Dialog, DialogActions, Divider, Slide, TextField, Tooltip, Typography } from \"@mui/material\"\nimport AddIcon from \"../../icons/AddIcon\"\nimport ErrorIcon from \"../../icons/ErrorIcon\"\nimport EditIcon from \"../../icons/EditIcon\"\nimport DeleteIcon from \"../../icons/DeleteIcon\"\nimport MDButton from \"../../components/MDButton\"\nimport MDTypography from \"../../components/MDTypography\"\nimport { supabase } from \"../../supabaseClient\"\nimport { useToast } from \"@dalgu/react-toast\"\nimport trackEvent, { useAuth } from \"../../components/context\"\nimport { AssuredWorkload } from \"@mui/icons-material\"\nimport { useNavigate } from \"react-router\"\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport const WalletsList = ({ wallets, updateFn }) => {\n  const { showToast } = useToast()\n  const user = useAuth()\n  const navigate = useNavigate()\n  const [openCancelConfirmation, setOpenCancelConfirmation] = useState(false)\n  const [addressInEditMode, setAddressInEditMode] = useState(\"\")\n  const [walletName, setWalletName] = useState(\"\")\n\n  const updateWalletName = async address => {\n    if (walletName === \"\") {\n      showToast(\"Empty value not accepted\")\n      return\n    }\n    const { error } = await supabase.from(\"wallets\").update({ wallet_name: walletName }).eq(\"address\", address).eq(\"owned_by\", user?.user_metadata?.username)\n    if (error) {\n      showToast(`Failed to update wallet name: ${error.message}`)\n    } else {\n      showToast(\"Wallet name updated successfully\")\n      setAddressInEditMode(\"\")\n      setWalletName(\"\")\n      updateFn()\n    }\n  }\n  const deleteWallet = async () => {\n    const { error } = await supabase.from(\"wallets\").delete().eq(\"address\", openCancelConfirmation).eq(\"owned_by\", user?.user_metadata?.username)\n    if (error) {\n      showToast(`Failed to delete wallet: ${error.message}`)\n    } else {\n      showToast(\"Wallet deleted successfully\")\n      setOpenCancelConfirmation(false)\n      updateFn()\n    }\n  }\n\n  const handleAddIconBtn = () => {\n    navigate(\"/addwallet\")\n    trackEvent(\"addwallet\")\n  }\n\n  return (\n    <Tooltip width=\"100%\" title=\"This component is blocked by Alpha testing.\">\n      <Card px={2} sx={{ paddingBottom: \"18px\", opacity: 0.5 }} color=\"#344767\">\n        <MDBox display=\"flex\" justifyContent=\"space-between\" pr={2}>\n          <CardHeader avatar={<AssuredWorkload />} titleTypographyProps={{ style: { fontSize: \"20px\", fontWeight: \"bold\" } }} title=\"Linked Wallets\" />\n          {/* <AddIcon tooltipText=\"Add\" onClick={() => navigate(\"/addwallet\")} /> Do not delete this is commented temporarily */}\n          {/* <AddIcon tooltipText=\"Add\" onClick={handleAddIconBtn} /> Do not delete this is commented temporarily */}\n          <AddIcon sx={{ transform: \"translate(-3px, 3px)\" }} />\n        </MDBox>\n        {wallets\n          .sort((a, b) => a.address.toLowerCase().localeCompare(b.address.toLowerCase()))\n          .map((wallet, index) => (\n            <>\n              <MDBox display=\"flex\" justifyContent=\"space-between\" pr={2} pl={1} pt={0.8} pb={0.9}>\n                {addressInEditMode === wallet.address ? (\n                  <TextField\n                    value={walletName}\n                    onChange={event => setWalletName(event.target.value)}\n                    type=\"text\"\n                    size=\"small\"\n                    sx={{\n                      padding: \"5px\",\n                      width: \"160px\",\n                      textAlign: \"right\",\n                      borderRadius: \"3px\",\n                      fontWeight: \"400\",\n                      fontSize: \"0.875rem\",\n                      fontFamily: '\"Roboto\",\"Helvetica\",\"Arial\",sans-serif'\n                    }}\n                    placeholder={wallet.name}\n                  />\n                ) : (\n                  <MDTypography\n                    variant=\"h6\"\n                    pl={1.5}\n                    pr={3}\n                    sx={{\n                      width: \"160px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      fontWeight: 700,\n                      lineHeight: 1.5,\n                      textTransform: \"capitalize\",\n                      fontSize: \"0.875rem\",\n                      letterSpacing: \"0.02857em\",\n                      fontFamily: '\"Roboto\", Helvetica, Arial, sans-serif',\n                      opacity: 1\n                    }}>\n                    {shorten(wallet.name)}\n                  </MDTypography>\n                )}\n                <MDBox display=\"flex\" alignItems=\"center\" justifyContent=\"center\" pr={5}>\n                  {wallet.verified && <ErrorIcon tooltipText=\"Not Verified\" />}\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      lineHeight: 1.5,\n                      padding: \"5px\",\n                      fontSize: \"0.875rem\",\n                      fontWeight: 400,\n                      letterSpacing: \"0.02857em\",\n                      color: \"rgb(123, 128, 154)\",\n                      fontFamily: '\"Roboto\", Helvetica, Arial, sans-serif'\n                    }}>\n                    {shorten(wallet.address)}\n                  </Typography>\n                </MDBox>\n                <MDBox display=\"flex\" gap={1}>\n                  <EditIcon\n                    fontSize={\"inherit\"}\n                    tooltipText=\"Edit\"\n                    onClick={() => {\n                      setAddressInEditMode(prevWalletAddress => (prevWalletAddress !== wallet.address ? wallet.address : \"\"))\n                      setWalletName(\"\")\n                    }}\n                  />\n                  <DeleteIcon tooltipText=\"Delete\" onClick={() => setOpenCancelConfirmation(wallet.address)} />\n                </MDBox>\n              </MDBox>\n              {index !== wallets?.length - 1 && <Divider />}\n              {addressInEditMode === wallet.address && (\n                <MDBox pl={2} pt={1.5} pb={2.5} display=\"flex\" alignItems=\"center\" gap={1}>\n                  <MDButton p=\"1\" size=\"small\" variant=\"gradient\" color=\"info\" onClick={() => updateWalletName(wallet.address)}>\n                    Save\n                  </MDButton>\n                  <MDButton\n                    onClick={() => {\n                      setAddressInEditMode(\"\")\n                      setWalletName(\"\")\n                    }}\n                    data-test-id=\"account-details-btn-cancel\">\n                    Cancel\n                  </MDButton>\n                </MDBox>\n              )}\n            </>\n          ))}\n        {wallets?.length === 0 && (\n          <Typography\n            variant=\"body1\"\n            px={2}\n            sx={{\n              fontSize: \"1rem\",\n              lineHeight: 1.375,\n              fontWeight: 400,\n              letterSpacing: \"0em\",\n              opacity: 1,\n              textTransform: \"none\",\n              verticalAlign: \"unset\",\n              color: \"#7b809a\",\n              margin: 0,\n              fontFamily: '\"Roboto\", \"Helvetica\", sansSerif'\n            }}>\n            You haven't linked a wallet yet. <br />\n            <Typography component=\"span\" sx={{ fontSize: \"1rem\", lineHeight: 1.375, fontWeight: 500, letterSpacing: \"0em\", pr: \"5px\", opacity: 1 }}>\n              Click\n            </Typography>\n            {/* <AddIcon sx={{ transform: \"translate(-3px, 3px)\" }} onClick={handleAddIconBtn} />  Do not delete this is commented temporarily */}\n            <AddIcon sx={{ transform: \"translate(-3px, 3px)\" }} />\n            to add a wallet to your account!\n          </Typography>\n        )}\n        <Dialog\n          open={openCancelConfirmation}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={() => setOpenCancelConfirmation(false)}\n          aria-describedby=\"alert-dialog-slide-description\"\n          maxWidth=\"sm\"\n          fullWidth>\n          <MDBox p={2.5} pb={0}>\n            <MDTypography variant=\"h6\">Are you sure you want to unlink this wallet?</MDTypography>\n            <MDTypography fontSize={14} color=\"text\">\n              You will have to verify this wallet again to use it in the app.\n            </MDTypography>\n          </MDBox>\n          <DialogActions>\n            <MDButton onClick={() => setOpenCancelConfirmation(false)}>Cancel</MDButton>\n            <MDButton color=\"info\" variant=\"gradient\" onClick={deleteWallet}>\n              Delete\n            </MDButton>\n          </DialogActions>\n        </Dialog>\n      </Card>\n    </Tooltip>\n  )\n}\n\nfunction shorten(address) {\n  const shortAddressBegin = address.substring(0, 4)\n  const shortAddressEnd = address.substring(address?.length - 4, address?.length)\n  return address?.length > 20 ? `${shortAddressBegin}......${shortAddressEnd}` : address\n}\n"],"names":["_ref","onClick","tooltipText","color","_jsx","Tooltip","title","placement","children","style","backgroundColor","border","fontSize","cursor","zIndex","width","height","fill","className","focusable","viewBox","d","Typography","component","variant","display","paddingRight","paddingBottom","AddWalletDialog","_jsxs","_Fragment","sx","lineHeight","fontWeight","letterSpacing","opacity","textTransform","verticalAlign","margin","fontFamily","MDBox","gap","paddingTop","alignItems","justifyContent","Link","to","selectWallet","textAlign","marginRight","marginBottom","paddingLeft","Transition","forwardRef","props","ref","Slide","direction","DefaultInfoCard","icon","description","value","showToast","useToast","wallets","setWallets","useState","wallet","setWallet","amount","setAmount","user","useAuth","openWithdraw","setOpenWithdraw","handleCloseWithdraw","openDeposit","setOpenDeposit","handleCloseDeposit","useEffect","async","_user$user_metadata","data","error","supabase","from","select","eq","user_metadata","username","message","map","wallet_name","label","fetchWallets","firstElement","split","balanceValue","parseFloat","isButtonDisabled","length","Card","pt","pb","mx","bgColor","shadow","overflow","borderRadius","Icon","px","MDTypography","Divider","CustomTooltip","disabled","MDButton","handleClickOpenWithdraw","trackEvent","size","p","handleClickOpenDeposit","my","Dialog","open","TransitionComponent","keepMounted","onClose","maxWidth","fullWidth","TextField","type","placeholder","minWidth","name","onChange","e","target","InputProps","endAdornment","InputAdornment","position","SelectProps","native","id","option","SelectAWallet","DialogActions","rpc","new_destination","new_amount","new_status","window","location","reload","event","mt","QRCode","ml","defaultProps","lib","investment","autographIcon","profit","profitIcon","network","groupIconTransaction","balance","accountBalanceIcon","py","pr","mb","coloredShadow","marginTop","flexDirection","gutterBottom","_props$transactions","isOpen","setIsOpen","setOpen","handleClose","searchText","setSearchText","selectedDateRange","setSelectedDateRange","SearchIcon","switchSearch","handleClickOpen","tuneIcon","onKeyPress","key","transactions","timeframe","filtered","filter","transaction","transaction_timeframe","renderedTransactions","m","listStyle","fourthElementRef","Transaction","amount_color","timestampts","timestamp","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","Date","React","isLoading","Calendar","selectRange","newDateRange","fifthElementRef","useRef","transactionsError","transactionsLoading","loadMore","useOffsetInfiniteScrollQuery","revalidateOnFocus","revalidateOnReconnect","balance_page","balanceError","balanceLoading","mutate","useQuery","isIntersecting","setIntersecting","_fifthElementRef$curr","fifthElementToObserve","current","querySelector","observer","IntersectionObserver","entries","forEach","entry","prevValue","observe","disconnect","ErrorFallback","LogoLoading","Grid","container","spacing","item","xs","md","xl","myBalanceIcon","toLocaleString","Transactions","wallet_data","WalletsList","updateFn","createSvgIcon","openCancelConfirmation","setOpenCancelConfirmation","useNavigate","addressInEditMode","setAddressInEditMode","walletName","setWalletName","CardHeader","avatar","AssuredWorkload","titleTypographyProps","AddIcon","transform","sort","a","b","address","toLowerCase","localeCompare","index","pl","padding","shorten","verified","ErrorIcon","EditIcon","prevWalletAddress","DeleteIcon","update","concat","updateWalletName","_user$user_metadata2","delete","shortAddressBegin","substring","shortAddressEnd"],"sourceRoot":""}